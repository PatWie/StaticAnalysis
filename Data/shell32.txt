int  AssocCreateForClasses(const ASSOCIATIONELEMENT* rgClasses,ULONG cClasses,REFIID riid,void** ppv);
int  AssocGetDetailsOfPropKey(IShellFolder* psf,PCUITEMID_CHILD pidl,PROPERTYKEY* pkey,VARIANT* pv,BOOL* pfFoundPropKey);
int  CDefFolderMenu_Create2(PCIDLIST_ABSOLUTE pidlFolder,HWND hwnd,UINT cidl,PCUITEMID_CHILD_ARRAY* apidl,IShellFolder* psf,LPFNDFMCALLBACK lpfn,UINT nKeys,const HKEY* ahkeys,IContextMenu** ppcm);
int  CIDLData_CreateFromIDArray(PCIDLIST_ABSOLUTE pidlFolder,UINT cidl,PCUIDLIST_RELATIVE_ARRAY apidl,IDataObject** ppdtobj);
int  CallCPLEntry16(HINSTANCE hInst,FARPROC16 lpfnEntry,HWND hwndCPL,UINT msg,LPARAM lParam1,LPARAM lParam2);
int  CommandLineToArgvW(LPCWSTR lpCmdLine,int* pNumArgs);
int  DAD_AutoScroll(HWND hwnd,AUTO_SCROLL_DATA* pad,const POINT* pptNow);
int  DAD_DragEnterEx(HWND hwndTarget,const POINT ptStart);
int  DAD_DragLeave();
int  DAD_DragMove(POINT pt);
int  DAD_SetDragImage(HIMAGELIST him,POINT* pptOffset);
int  DAD_ShowDragImage(BOOL fShow);
int  DllGetVersion(DLLVERSIONINFO* pDllVersionInfo);
int  DoEnvironmentSubst(LPTSTR pszString,UINT cchString);
int  DragAcceptFiles(HWND hWnd,BOOL fAccept);
int  DragFinish(HDROP hDrop);
int  DragQueryFile(HDROP hDrop,UINT iFile,LPTSTR lpBuffer,UINT nBuffer);
int  DragQueryFileA(HDROP hDrop,UINT iFile,LPTSTR lpBuffer,UINT nBuffer);
int  DragQueryFileW(HDROP hDrop,UINT iFile,LPTSTR lpBuffer,UINT nBuffer);
int  DragQueryPoint(HDROP hDrop,LPPOINT lppt);
int  DriveType(int iDrive);
int  DuplicateIcon(HINSTANCE hInst,HICON hIcon);
int  ExtractAssociatedIcon(HINSTANCE hInst,LPTSTR lpIconPath,LPWORD lpiIcon);
int  ExtractAssociatedIconA(HINSTANCE hInst,LPTSTR szIconPath,LPWORD lpiIcon);
int  ExtractAssociatedIconEx(HINSTANCE hInst,LPTSTR lpIconPath,LPWORD lpiIconIndex,LPWORD lpiIconId);
int  ExtractAssociatedIconW(HINSTANCE hInst,LPTSTR szIconPath,LPWORD lpiIcon);
int  ExtractIcon(DWORD hInst,DWORD lpszExeFileName,DWORD nIconIndex);
int  ExtractIcon(HINSTANCE hInst,LPCTSTR lpszExeFileName,UINT nIconIndex);
int  ExtractIconA(HINSTANCE hInst,LPCTSTR lpszExeFileName,UINT nIconIndex);
int  ExtractIconEx(LPCTSTR lpszFile,int nIconIndex,HICON* phiconLarge,HICON* phiconSmall,UINT nIcons);
int  ExtractIconExW(LPCTSTR lpszFile,int nIconIndex,HICON* phiconLarge,HICON* phiconSmall,UINT nIcons);
int  ExtractIconW(HINSTANCE hInst,LPCTSTR lpszExeFileName,UINT nIconIndex);
int  FileIconInit(BOOL fRestoreCache);
int  FindExecutable(LPCTSTR lpFile,LPCTSTR lpDirectory,LPTSTR lpResult);
int  GUIDFromString(LPCTSTR psz,LPGUID pguid);
int  GetCurrentProcessExplicitAppUserModelID(PWSTR* AppID);
int  GetFileNameFromBrowse(HWND hwnd,LPWSTR pszFilePath,UINT cchFilePath,LPCWSTR pszWorkingDir,LPCWSTR pszDefExt,LPCWSTR pszFilters,LPCWSTR szTitle);
int  ILAppendID(PIDLIST_RELATIVE pidl,LPSHITEMID pmkid,BOOL fAppend);
int  ILClone(PCUIDLIST_RELATIVE pidl);
int  ILCloneFirst(PCUIDLIST_RELATIVE pidl);
int  ILCombine(PCIDLIST_ABSOLUTE pidl1,PCUIDLIST_RELATIVE pidl2);
int  ILCreateFromPath(LPCSTR pszPath);
int  ILFindChild(PCIDLIST_ABSOLUTE pidlParent,PCIDLIST_ABSOLUTE pidlChild);
int  ILFindLastID(PCUIDLIST_RELATIVE pidl);
int  ILFree(PIDLIST_RELATIVE pidl);
int  ILGetNext(PCUIDLIST_RELATIVE pidl);
int  ILGetSize(PCUIDLIST_RELATIVE pidl);
int  ILIsEqual(PCIDLIST_ABSOLUTE pidl1,PCIDLIST_ABSOLUTE pidl2);
int  ILIsParent(PCIDLIST_ABSOLUTE pidl1,PCIDLIST_ABSOLUTE pidl2,BOOL fImmediate);
int  ILLoadFromStream(IStream* pstm,PIDLIST_RELATIVE* pidl);
int  ILRemoveLastID(PUIDLIST_RELATIVE pidl);
int  ILSaveToStream(IStream* pstm,PCUIDLIST_RELATIVE pidl);
int  InitNetworkAddressControl();
int  IsNetDrive(int iDrive);
int  IsUserAnAdmin();
int  LinkWindow_RegisterClass();
int  LinkWindow_UnregisterClass();
int  NTSHChangeNotifyDeregister(ULONG ulID);
int  NTSHChangeNotifyRegister(HWND hwnd,int fSources,LONG fEvents,UINT wMsg,int cEntries,SHChangeNotifyEntry* pfsne);
int  OpenRegStream(HKEY hkey,LPCWSTR pszSubkey,LPCWSTR pszValue,DWORD grfMode);
int  ParseField(LPCTSTR* szData,int n,LPTSTR* szBuf,int iBufLen);
int  PathCleanupSpec(LPCWSTR pszDir,LPWSTR pszSpec);
int  PathGetShortPath(LPWSTR pszLongPath);
int  PathIsExe(LPCWSTR szfile);
int  PathIsSlow(LPCTSTR pszFile,DWORD dwFileAttr);
int  PathMakeUniqueName(LPWSTR pszUniqueName,UINT cchMax,LPCWSTR pszTemplate,LPCWSTR pszLongPlate,LPCWSTR pszDir);
int  PathProcessCommand(LPCWSTR lpSrc,LPWSTR lpDest,int iDestMax,DWORD dwFlags);
int  PathResolve(LPWSTR pszPath,LPCWSTR* dirs,UINT fFlags);
int  PathYetAnotherMakeUniqueName(LPWSTR pszUniqueName,LPCWSTR pszPath,LPCWSTR pszShort,LPCWSTR pszFileSpec);
int  PickIconDlg(HWND hwnd,LPWSTR pszIconPath,UINT cchIconPath,int* piIconIndex);
int  PifMgr_CloseProperties(HANDLE hProps,UINT flOpt);
int  PifMgr_GetProperties(HANDLE hProps,LPCSTR pszGroup,VOID* lpProps,int cbProps,UINT flOpt);
int  PifMgr_OpenProperties(LPCWSTR pszApp,LPCWSTR lpszPIF,UINT hInf,UINT flOpt);
int  PifMgr_SetProperties(HANDLE hProps,LPCSTR pszGroup,VOID* lpProps,int cbProps,UINT flOpt);
int  ReadCabinetState(CABINETSTATE* pcs,int cLength);
int  RealDriveType(int iDrive,BOOL fOKToHitNet);
int  RestartDialog(HWND hParent,LPCWSTR pszPrompt,DWORD dwFlags);
int  RestartDialogEx(HWND hParent,LPCWSTR pszPrompt,DWORD dwFlags,HWND dwReasonCode);
int  SHAddDefaultPropertiesByExt(PCWSTR pszExt,IPropertyStore* pPropStore);
int  SHAddFromPropSheetExtArray(HPSXA hpsxa,LPFNADDPROPSHEETPAGE lpfnAddPage,LPARAM lParam);
int  SHAddToRecentDocs(UINT uFlags,LPCVOID pv);
int  SHAlloc(SIZE_T cb);
int  SHAppBarMessage(DWORD dwMessage,PAPPBARDATA pData);
int  SHAssocEnumHandlers(LPCWSTR pszExtra,ASSOC_FILTER afFilter,IEnumAssocHandlers** ppEnumHandler);
int  SHAssocEnumHandlersForProtocolByApplication(PCWSTR protocol,REFIID riid,void** enumHandlers);
int  SHBindToFolderIDListParent(IShellFolder* psfRoot,PCUIDLIST_RELATIVE pidl,REFIID riid,void** ppv,PCUITEMID_CHILD* ppidlLast);
int  SHBindToObject(IShellFolder* psf,PCUIDLIST_RELATIVE pidl,IBindCtx* pbc,REFIID riid,void** ppv);
int  SHBindToParent(PCIDLIST_ABSOLUTE pidl,REFIID riid,VOID** ppv,PCUITEMID_CHILD* ppidlLast);
int  SHBrowseForFolder(LPBROWSEINFO lpbi);
int  SHCLSIDFromString(LPCWSTR psz,CLSID* pclsid);
int  SHChangeNotification_Lock(HANDLE hChange,DWORD dwProcId,PIDLIST_ABSOLUTE** pppidl,LONG* plEvent);
int  SHChangeNotification_Unlock(HANDLE hLock);
int  SHChangeNotify(DWORD wEventId,DWORD uFlags,LPCVOID dwItem1,LPCVOID dwItem2);
int  SHChangeNotifyDeregister(ULONG ulID);
int  SHChangeNotifyRegister(HWND hwnd,int fSources,LONG fEvents,UINT wMsg,int cEntries,const SHChangeNotifyEntry* pshcne);
int  SHChangeNotifyRegisterThread(SCNRT_STATUS status);
int  SHCloneSpecialIDList(HWND hwndOwner,DWORD csidl,BOOL fCreate);
int  SHCoCreateInstance(LPCWSTR pszCLSID,const CLSID* pclsid,IUnknown* pUnkOuter,REFIID riid,void** ppv);
int  SHCreateAssociationRegistration(REFIID riid,void** ppv);
int  SHCreateDataObject(PCIDLIST_ABSOLUTE pidlFolder,UINT cidl,PCUITEMID_CHILD_ARRAY apidl,IDataObject* pdtInner,REFIID riid,void** ppv);
int  SHCreateDefaultContextMenu(const DEFCONTEXTMENU* pdcm,REFIID riid,void** ppv);
int  SHCreateDefaultExtractIcon(REFIID riid,void** ppv);
int  SHCreateDefaultPropertiesOp(IShellItem* psi,IFileOperation** ppFileOp);
int  SHCreateDirectory(HWND hwnd,LPCWSTR pszPath);
int  SHCreateDirectoryEx(HWND hwnd,LPCTSTR pszPath,const SECURITY_ATTRIBUTES* psa);
int  SHCreateFileExtractIconW(LPCWSTR pszFile,DWORD dwFileAttributes,REFIID riid,void** ppv);
int  SHCreateItemFromIDList(PCIDLIST_ABSOLUTE pidl,REFIID riid,void** ppv);
int  SHCreateItemFromParsingName(PCWSTR pszPath,IBindCtx* pbc,REFIID riid,void** ppv);
int  SHCreateItemFromRelativeName(IShellItem* psiParent,PCWSTR pszName,IBindCtx* pbc,REFIID riid,void** ppv);
int  SHCreateItemInKnownFolder(REFKNOWNFOLDERID kfid,KNOWN_FOLDER_FLAG dwKFFlags,PCWSTR pszItem,REFIID riid,void** ppv);
int  SHCreateItemWithParent(PCIDLIST_ABSOLUTE pidlParent,IShellFolder* psfParent,PCUITEMID_CHILD pidl,REFIID riid,void** ppvItem);
int  SHCreateProcessAsUserW(PSHCREATEPROCESSINFOW pscpi);
int  SHCreatePropSheetExtArray(HKEY hkey,LPCWSTR pszSubkey,UINT max_iface);
int  SHCreateQueryCancelAutoPlayMoniker(IMoniker** ppmoniker);
int  SHCreateShellFolderView(const SFV_CREATE* pcsfv,IShellView** ppsv);
int  SHCreateShellFolderViewEx(LPCSFV pcsfv,IShellView** ppsv);
int  SHCreateShellItem(PCIDLIST_ABSOLUTE pidlParent,IShellFolder* psfParent,PCUITEMID_CHILD pidl,IShellItem** ppsi);
int  SHCreateShellItemArray(PCIDLIST_ABSOLUTE pidlParent,IShellFolder* psf,UINT cidl,PCUITEMID_CHILD_ARRAY ppidl,IShellItemArray** ppsiItemArray);
int  SHCreateShellItemArrayFromDataObject(IDataObject* pdo,REFIID riid,void** ppv);
int  SHCreateShellItemArrayFromIDLists(UINT cidl,PCIDLIST_ABSOLUTE_ARRAY rgpidl,IShellItemArray** ppsiItemArray);
int  SHCreateShellItemArrayFromShellItem(IShellItem* psi,REFIID riid,void** ppv);
int  SHCreateStdEnumFmtEtc(UINT cfmt,IEnumFORMATETC** ppenumFormatEtc);
int  SHDefExtractIcon(LPCTSTR pszIconFile,int iIndex,UINT uFlags,HICON* phiconLarge,HICON* phiconSmall,UINT nIconSize);
int  SHDestroyPropSheetExtArray(HPSXA hpsxa);
int  SHDoDragDrop(HWND hwnd,IDataObject* pdtobj,IDropSource* pdsrc,DWORD dwEffect,DWORD* pdwEffect);
int  SHEmptyRecycleBin(HWND hwnd,LPCTSTR pszRootPath,DWORD dwFlags);
int  SHEnumerateUnreadMailAccountsW(HKEY hKeyUser,DWORD dwIndex,LPWSTR pszMailAddress,int cchMailAddress);
int  SHEvaluateSystemCommandTemplate(PCWSTR pszCmdTemplate,PWSTR* ppszApplication,PWSTR* ppszCommandLine,PWSTR* ppszParameters);
int  SHExtractIconsW(LPCWSTR pszFileName,int nIconIndex,int cxIcon,int cyIcon,HICON* phIcon,UINT* pIconId,UINT nIcons,UINT flags);
int  SHFileOperation(LPSHFILEOPSTRUCT lpFileOp);
int  SHFindFiles(PCIDLIST_ABSOLUTE pidlFolder,PCIDLIST_ABSOLUTE pidlSaveFile);
int  SHFind_InitMenuPopup(HMENU hmenu,HWND hwnd,UINT idCmdFirst,UINT idCmdLast);
int  SHFlushClipboard();
int  SHFlushSFCache();
int  SHFormatDrive(HWND hwnd,UINT drive,UINT fmtID,UINT options);
int  SHFree(void* pv);
int  SHFreeNameMappings(HANDLE hNameMappings);
int  SHGetAttributesFromDataObject(IDataObject* pdo,DWORD dwAttributeMask,DWORD* pdwAttributes,UINT* pcItems);
int  SHGetDataFromIDList(IShellFolder* psf,PCUITEMID_CHILD pidl,DWORD nFormat,PVOID pv,int cb);
int  SHGetDesktopFolder(IShellFolder** ppshf);
int  SHGetDiskFreeSpace(LPCTSTR pszVolume,ULARGE_INTEGER* pqwFreeCaller,ULARGE_INTEGER* pqwTot,ULARGE_INTEGER* pqwFree);
int  SHGetDiskFreeSpaceEx(LPCTSTR pszVolume,ULARGE_INTEGER* pqwFreeCaller,ULARGE_INTEGER* pqwTot,ULARGE_INTEGER* pqwFree);
int  SHGetDiskFreeSpaceExW(LPCTSTR pszVolume,ULARGE_INTEGER* pqwFreeCaller,ULARGE_INTEGER* pqwTot,ULARGE_INTEGER* pqwFree);
int  SHGetDriveMedia(LPCWSTR pszDrive,DWORD* pdwMediaContent);
int  SHGetFileInfo(LPCTSTR szPath,DWORD dwFileAttributes,SHFILEINFO* pSFileInfo,UINT cbFileInfo,UINT uFlags);
int  SHGetFileInfoW(LPCTSTR szPath,DWORD dwFileAttributes,SHFILEINFO* pSFileInfo,UINT cbFileInfo,UINT uFlags);
int  SHGetFolderLocation(HWND hwndOwner,DWORD nFolder,HANDLE hToken,DWORD dwReserved,PIDLIST_ABSOLUTE* ppidl);
int  SHGetFolderPath(HWND hwndOwner,int nFolder,HANDLE hToken,DWORD dwFlags,LPTSTR pszPath);
int  SHGetFolderPathA(HWND hwndOwner,int nFolder,HANDLE hToken,DWORD dwReserved,LPTSTR lpBuffer);
int  SHGetFolderPathAndSubDir(HWND hwnd,DWORD csidl,HANDLE hToken,DWORD dwFlags,LPCTSTR pszSubDir,LPTSTR pszPath);
int  SHGetFolderPathW(HWND hwndOwner,int nFolder,HANDLE hToken,DWORD dwReserved,LPTSTR lpBuffer);
int  SHGetIDListFromObject(IUnknown* punk,PIDLIST_ABSOLUTE* ppidl);
int  SHGetIconOverlayIndex(LPCTSTR pszIconPath,int iIconIndex);
int  SHGetImageList(int iImageList,REFIID riid,void** ppv);
int  SHGetInstanceExplorer(IUnknown** ppunk);
int  SHGetItemFromDataObject(IDataObject* pdtobj,DATAOBJ_GET_ITEM_FLAGS dwFlags,REFIID riid,void** ppv);
int  SHGetItemFromObject(IUnknown* punk,REFIID riid,void** ppv);
int  SHGetKnownFolderIDList(REFKNOWNFOLDERID rfid,KNOWN_FOLDER_FLAG dwFlags,HANDLE hToken,PIDLIST_ABSOLUTE* ppidl);
int  SHGetKnownFolderItem(REFKNOWNFOLDERID rfid,KNOWN_FOLDER_FLAG dwFlags,HANDLE hToken,REFIID riid,void** ppv);
int  SHGetKnownFolderPath(REFKNOWNFOLDERID rfid,DWORD dwFlags,HANDLE hToken,PWSTR* ppszPath);
int  SHGetLocalizedName(LPCWSTR pszPath,LPWSTR pszResModule,UINT cch,int* pidsRes);
int  SHGetMalloc(LPMALLOC* ppMalloc);
int  SHGetNameFromIDList(PCIDLIST_ABSOLUTE pidl,SIGDN sigdnName,PWSTR* ppszName);
int  SHGetNameFromPropertyKey(REFPROPERTYKEY propkey,PWSTR* ppszCanonicalName);
int  SHGetNewLinkInfo(LPCTSTR pszLinkTo,LPCTSTR pszDir,LPTSTR pszName,BOOL* pfMustCopy,UINT uFlags);
int  SHGetPathFromIDList(PCIDLIST_ABSOLUTE pidl,LPTSTR pszPath);
int  SHGetPathFromIDListEx(PCIDLIST_ABSOLUTE pidl,PWSTR pszPath,DWORD cchPath,GPFIDL_FLAGS uOpts);
int  SHGetPathFromIDListW(PCIDLIST_ABSOLUTE pidlTarget,LPTSTR pszPath);
int  SHGetPropertyStoreForWindow(HWND hwnd,REFIID riid,void** ppv);
int  SHGetPropertyStoreFromIDList(PCIDLIST_ABSOLUTE pidl,GETPROPERTYSTOREFLAGS flags,REFIID riid,void** ppv);
int  SHGetPropertyStoreFromParsingName(PCWSTR pszPath,IBindCtx* pbc,GETPROPERTYSTOREFLAGS flags,REFIID riid,void** ppv);
int  SHGetRealIDL(IShellFolder* psf,PCUITEMID_CHILD pidlSimple,PITEMID_CHILD* ppidlReal);
int  SHGetSetFolderCustomSettings(LPSHFOLDERCUSTOMSETTINGS pfcs,LPCTSTR pszPath,DWORD dwReadWrite);
int  SHGetSetSettings(LPSHELLSTATE lpss,DWORD dwMask,BOOL bSet);
int  SHGetSettings(LPSHELLFLAGSTATE lpsfs,DWORD dwMask);
int  SHGetShellStyleHInstance();
int  SHGetSpecialFolderLocation(HWND hwndOwner,DWORD nFolder,PIDLIST_ABSOLUTE* pidl);
int  SHGetSpecialFolderPath(HWND hwndOwner,LPTSTR lpszPath,DWORD csidl,BOOL fCreate);
int  SHGetSpecialFolderPathA(HWND hwnd,LPTSTR pszPath,DWORD csidl,BOOL fCreate);
int  SHGetSpecialFolderPathW(HWND hwnd,LPTSTR pszPath,DWORD csidl,BOOL fCreate);
int  SHGetStockIconInfo(SHSTOCKICONID siid,UINT uFlags,SHSTOCKICONINFO* psii);
int  SHGetTemporaryPropertyForItem(IShellItem* psi,REFPROPERTYKEY pk,PROPVARIANT* ppropvarInk);
int  SHGetUnreadMailCountW(HKEY hKeyUser,LPCWSTR pszMailAddress,DWORD* pdwCount,FILETIME* pFileTime,LPCWSTR pszShellExecuteCommand,int cchShellExecuteCommand);
int  SHHandleUpdateImage(PCIDLIST_ABSOLUTE pidlExtra);
int  SHILCreateFromPath(LPCWSTR pszPath,PIDLIST_ABSOLUTE* ppidl,DWORD* rgflnOut);
int  SHInvokePrinterCommand(HWND hwnd,UINT uAction,LPCTSTR lpBuf1,LPCTSTR lpBuf2,BOOL fModal);
int  SHIsFileAvailableOffline(LPCWSTR pszPath,LPDWORD pdwStatus);
int  SHLimitInputEdit(HWND hwndEdit,IShellFolder* psf);
int  SHLoadInProc(REFCLSID rclsid);
int  SHLoadNonloadedIconOverlayIdentifiers();
int  SHLoadOLE(LPARAM lParam);
int  SHLocalStrDup(LPCWSTR psz,LPWSTR* ppsz);
int  SHMapIDListToImageListIndexAsync(IShellTaskScheduler* pts,IShellFolder* psf,LPCITEMIDLIST pidl,UINT flags,PFNASYNCICONTASKBALLBACK pfn,void* pvData,void* pvHint,int* piIndex,int* piIndexSel);
int  SHMapPIDLToSystemImageListIndex(IShellFolder* psf,PCUITEMID_CHILD pidl,int* piIndex);
int  SHMultiFileProperties(IDataObject* pdtobj,DWORD dwFlags);
int  SHObjectProperties(HWND hwnd,DWORD shopObjectType,PCWSTR pszObjectName,PCWSTR pszPropertyPage);
int  SHOpenFolderAndSelectItems(PCIDLIST_ABSOLUTE pidlFolder,UINT cidl,PCUITEMID_CHILD_ARRAY* apidl,DWORD dwFlags);
int  SHOpenPropSheetW(LPCWSTR pszCaption,UINT ckeys,const CLSID* pclsidDef,IDataObject* pdtobj,IShellBrowser* psb,LPCWSTR pStartPage);
int  SHOpenWithDialog(HWND hwndParent,const OPENASINFO* poainfo);
int  SHParseDisplayName(LPCWSTR pszName,IBindCtx* pbc,PIDLIST_ABSOLUTE* ppidl,SFGAOF sfgaoIn,SFGAOF* psfgaoOut);
int  SHPathPrepareForWrite(HWND hwnd,IUnknown* punkEnableModless,LPCTSTR pszPath,DWORD dwFlags);
int  SHPropStgCreate(IPropertySetStorage* psstg,REFFMTID fmtid,const CLSID* pclsid,DWORD grfFlags,DWORD grfMode,DWORD dwDisposition,IPropertyStorage** ppstg,UINT* puCodePage);
int  SHPropStgReadMultiple(IPropertyStorage* pps,UINT uCodePage,ULONG cpspec);
int  SHPropStgWriteMultiple(IPropertyStorage* pps,UINT* uCodePage,ULONG cpspec,PROPID propidNameFirst);
int  SHQueryRecycleBin(LPCTSTR pszRootPath,LPSHQUERYRBINFO pSHQueryRBInfo);
int  SHQueryUserNotificationState(QUERY_USER_NOTIFICATION_STATE* pquns);
int  SHRemoveLocalizedName(LPCWSTR pszPath);
int  SHReplaceFromPropSheetExtArray(HPSXA hpsxa,UINT uPageID,LPFNADDPROPSHEETPAGE lpfnReplaceWith,LPARAM lParam);
int  SHResolveLibrary(IShellItem* psiLibrary);
int  SHRestricted(RESTRICTIONS rest);
int  SHRunControlPanel(LPCWSTR lpcszCmdLine,HWND hwndMsgParent);
int  SHSetDefaultProperties(HWND hwnd,IShellItem* psi,DWORD dwFileOpFlags,IFileOperationProgressSink* pfops);
int  SHSetFolderPath(DWORD csidl,HANDLE hToken,DWORD dwFlags,LPCTSTR pszPath);
int  SHSetInstanceExplorer(IUnknown* punk);
int  SHSetKnownFolderPath(REFKNOWNFOLDERID rfid,DWORD dwFlags,HANDLE hToken,PCWSTR pszPath);
int  SHSetLocalizedName(LPCWSTR pszPath,LPCWSTR pszResModule,int idsRes);
int  SHSetTemporaryPropertyForItem(IShellItem* psi,REFPROPERTYKEY propkey,REFPROPVARIANT propvar);
int  SHSetUnreadMailCountW(LPCWSTR pszMailAddress,DWORD dwCount,LPCWSTR pszShellExecuteCommand);
int  SHShellFolderView_Message(HWND hwnd,UINT uMsg,LPARAM lparam);
int  SHShowManageLibraryUI(IShellItem* psiLibrary,HWND hwndOwner,LPCWSTR pszTitle,LPCWSTR pszInstruction,LIBRARYMANAGEDIALOGOPTIONS lmdOptions);
int  SHSimpleIDListFromPath(LPCWSTR pszPath);
int  SHStartNetConnectionDialogW(HWND hwnd,LPCWSTR pszRemoteName,DWORD dwType);
int  SHTestTokenMembership(HANDLE hToken,ULONG ulRID);
int  SHUnlockShared(void* pvData);
int  SHUpdateImage(LPCTSTR pszHashItem,int iIndex,UINT uFlags,int iImageIndex);
int  SHValidateUNC(HWND hwndOwner,LPWSTR pszFile,UINT fConnect);
int  SetCurrentProcessExplicitAppUserModelID(PCWSTR AppID);
int  ShellAbout(HWND hWnd,LPCTSTR szApp,LPCTSTR szOtherStuff,HICON hIcon);
int  ShellAboutA(HWND hWnd,LPCTSTR szApp,LPCTSTR szOtherStuff,HICON hIcon);
int  ShellAboutW(HWND hWnd,LPCTSTR szApp,LPCTSTR szOtherStuff,HICON hIcon);
int  ShellExecute(HWND hwnd,LPCTSTR lpOperation,LPCTSTR lpFile,LPCTSTR lpParameters,LPCTSTR lpDirectory,INT nShowCmd);
int  ShellExecuteA(HWND hWnd,LPCTSTR lpOperation,LPCTSTR lpFile,LPCTSTR lpParameters,LPCTSTR lpDirectory,INT nShowCmd);
int  ShellExecuteEx(LPSHELLEXECUTEINFO lpExecInfo);
int  ShellExecuteExW(LPSHELLEXECUTEINFO lpExecInfo);
int  ShellExecuteW(HWND hWnd,LPCTSTR lpOperation,LPCTSTR lpFile,LPCTSTR lpParameters,LPCTSTR lpDirectory,INT nShowCmd);
int  Shell_GetCachedImageIndex(LPCWSTR pwszIconPath,int iIconIndex,UINT uIconFlags);
int  Shell_GetImageLists(HIMAGELIST* phiml,HIMAGELIST* phimlSmall);
int  Shell_MergeMenus(HMENU hmDst,HMENU hmSrc,UINT uInsert,UINT uIDAdjust,UINT uIDAdjustMax,ULONG uFlags);
int  Shell_NotifyIcon(DWORD dwMessage,PNOTIFYICONDATA pnid);
int  Shell_NotifyIconGetRect(const NOTIFYICONIDENTIFIER* identifier,RECT* iconLocation);
int  Shell_NotifyIconW(DWORD dwMessage,PNOTIFYICONDATA pnid);
int  SignalFileOpen(PCIDLIST_ABSOLUTE pidl);
int  StgMakeUniqueName(IStorage* pstgParent,PCWSTR pszFileSpec,DWORD grfMode,REFIID riid,void** ppv);
int  WOWShellExecute(HWND hwnd,LPCTSTR lpOperation,LPCTSTR lpFile,LPCTSTR lpParameters,LPCTSTR lpDirectory,INT nShowCmd,void* lpfnCBWinExec);
int  Win32DeleteFile(LPCTSTR pszFileName);
int  WriteCabinetState(CABINETSTATE* pcs);