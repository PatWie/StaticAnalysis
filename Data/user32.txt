BOOL  DestroyWindow(HWND hWnd);
BOOL  EndDialog(HWND hDlg,int nResult);
BOOL  EndPaint(HWND hWnd,const PAINTSTRUCT *lpPaint);
BOOL  GetClientRect(HWND hWnd,LPRECT lpRect);
BOOL  GetWindowRect(HWND hWnd,RECT * lpRect);
BOOL  ShowWindow(HWND hWnd,int nCmdShow);
BOOL  TranslateMessage(const MSG *lpMsg);
BOOL  UpdateWindow(HWND hWnd);
COLORREF  SetPixel(HDC,int,int,COLORREF);
HDC  BeginPaint(HWND hWnd,PAINTSTRUCT *lpPaint);
HLOCAL  LocalFree(HLOCAL hMem);
HMODULE  GetModuleHandleA(LPCSTR lpModuleName);
int  DrawTextA(HDC hDC,LPCSTR lpString,int nCount,LPRECT lpRect,UINT uFormat);
void  PostQuitMessage(int nExitCode);
void  GetStartupInfo(LPSTARTUPINFO lpStartupInfo);
void  GetStartupInfoA(LPSTARTUPINFO lpStartupInfo);
void  GetStartupInfoW(LPSTARTUPINFO lpStartupInfo);
int  EditWndProc(DWORD hWnd,DWORD uMsg,DWORD wParam,DWORD lParam);
int  ActivateKeyboardLayout(KeyboardLayoutHandle hkl,UINT Flags);
int  AddClipboardFormatListener(HWND hwnd);
int  AdjustWindowRect(LPRECT lpRect,DWORD dwWinStyle,BOOL bMenu);
int  AdjustWindowRectEx(LPRECT lpRect,DWORD dwWinStyle,BOOL bMenu,DWORD dwEsStyle);
int  AllowActivateDetachQueuesSetFocus();
int  AllowSetForegroundWindow(DWORD dwProcessId);
int  AnimateWindow(HWND hWnd,DWORD dwTime,DWORD dwFlags);
int  AnyPopup();
int  AppendMenu(HMENU hMenu,UINT uFlags,UINT_PTR uIDNewItem,LPCTSTR lpNewItem);
int  AppendMenuA(HMENU hMenu,UINT wFlags,UINT_PTR wIDNewItem,LPCTSTR lpNewItem);
int  AppendMenuW(HMENU hMenu,UINT wFlags,UINT_PTR wIDNewItem,LPCTSTR lpNewItem);
int  ArrangeIconicWindows(HWND hwnd);
int  AttachThreadInput(DWORD idAttach,DWORD idAttachTo,BOOL fAttach);
int  BeginDeferWindowPos(int nNumWindows);
int  BeginPaint(HWND hwnd,LPPAINTSTRUCT lpPaint);
int  BlockInput(BOOL fBlockIt);
int  BringWindowToTop(HWND hWnd);
int  BroadcastSystemMessage(DWORD dwFlags,LPDWORD lpdwRecipients,UINT uiMessage,WPARAM wParam,LPARAM Param);
int  BroadcastSystemMessageEx(DWORD dwFlags,LPDWORD lpdwRecipients,UINT uiMessage,WPARAM wParam,LPARAM lParam,PBSMINFO pBSMInfo);
int  CalculatePopupWindowPosition(const POINT* anchorPoint,const SIZE* windowSize,UINT flags,RECT* excludeRect,RECT* popupWindowPosition);
int  CallMsgFilter(LPMSG lpMsg,int nCode);
int  CallNextHookEx(HHOOK hhk,int nCode,WPARAM wParam,LPARAM lParam);
int  CallWindowProc(WNDPROC lpPrevWndFunc,HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam);
int  CallWindowProcA(WNDPROC lpPrevWndFunc,HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam);
int  CallWindowProcW(WNDPROC lpPrevWndFunc,HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam);
int  CascadeWindows(HWND hwndParent,UINT wHow,const RECT* lpRect,UINT cKids,const HWND* lpKids);
int  ChangeClipboardChain(HWND hWndRemove,HWND hWndNewNext);
int  ChangeDisplaySettings(DEVMODE* lpDevMode,DWORD dwflags);
int  ChangeDisplaySettingsEx(LPCTSTR lpszDeviceName,DEVMODE* lpDevMode,HWND hwnd,DWORD dwflags,LPVOID lParam);
int  ChangeWindowMessageFilter(UINT message,DWORD dwFlag);
int  ChangeWindowMessageFilterEx(HWND hWnd,UINT message,DWORD action,PCHANGEFILTERSTRUCT pChangeFilterStruct);
int  CharLower(LPTSTR lpsz);
int  CharLowerA(LPTSTR lpsz);
int  CharLowerBuff(LPTSTR lpsz,DWORD cchLength);
int  CharLowerBuffA(LPTSTR lpsz,DWORD cchLength);
int  CharLowerBuffW(LPTSTR lpsz,DWORD cchLength);
int  CharLowerW(LPTSTR lpsz);
int  CharNext(LPCTSTR lpsz);
int  CharNextA(LPCTSTR lpsz);
int  CharNextExA(WORD CodePage,LPCSTR lpCurrentChar,DWORD dwFlags);
int  CharNextW(LPCTSTR lpsz);
int  CharPrev(LPCTSTR lpszStart,LPCTSTR lpszCurrent);
int  CharPrevA(LPCTSTR lpszStart,LPCTSTR lpszCurrent);
int  CharPrevExA(WORD CodePage,LPCSTR lpStart,LPCSTR lpCurrentChar,DWORD dwFlags);
int  CharToOem(LPCTSTR lpszSrc,LPSTR lpszDst);
int  CharToOemA(LPCTSTR lpszSrc,LPSTR lpszDst);
int  CharToOemBuff(LPCTSTR lpszSrc,LPSTR lpszDst,DWORD cchDstLength);
int  CharToOemW(LPCTSTR lpszSrc,LPSTR lpszDst);
int  CharUpper(LPTSTR lpsz);
int  CharUpperA(LPTSTR lpsz);
int  CharUpperBuff(LPTSTR lpsz,DWORD cchLength);
int  CharUpperBuffA(LPTSTR lpsz,DWORD cchLength);
int  CharUpperBuffW(LPTSTR lpsz,DWORD cchLength);
int  CharUpperW(LPTSTR lpsz);
int  CheckDlgButton(HWND hDlg,int nIDButton,UINT uCheck);
int  CheckMenuItem(HMENU hmenu,UINT uIDCheckItem,UINT uCheck);
int  CheckMenuRadioItem(HMENU hmenu,UINT idFirst,UINT idLast,UINT idCheck,DWORD uFlags);
int  CheckRadioButton(HWND hDlg,int nIDFirstButton,int nIDLastButton,int nIDCheckButton);
int  ChildWindowFromPoint(HWND hWndParent,POINT Point);
int  ChildWindowFromPointEx(HWND hwndParent,POINT pt,UINT uFlags);
int  ClientToScreen(HWND hWnd,LPPOINT lpPoint);
int  ClipCursor(const RECT* lpRect);
int  CloseClipboard();
int  CloseDesktop(HDESK hDesktop);
int  CloseGestureInfoHandle(HGESTUREINFO hGestureInfo);
int  CloseTouchInputHandle(HTOUCHINPUT hTouchInput);
int  CloseWindow(HWND hWnd);
int  CloseWindowStation(HWINSTA hWinSta);
int  CopyAcceleratorTable(HACCEL hAccelSrc,LPACCEL lpAccelDst,int cAccelEntries);
int  CopyAcceleratorTableA(HACCEL hAccelSrc,LPACCEL IpAcceIDst,int cAccelEntries);
int  CopyAcceleratorTableW(HACCEL hAccelSrc,LPACCEL IpAcceIDst,int cAccelEntries);
int  CopyCursor(HCURSOR pcur);
int  CopyIcon(HICON hIcon);
int  CopyImage(HANDLE hImage,UINT uType,int cxDesired,int cyDesired,UINT fuFlags);
int  CopyRect(LPRECT lprcDst,const RECT* lprcSrc);
int  CountClipboardFormats();
int  CreateAcceleratorTable(LPACCEL lpaccl,int cEntries);
int  CreateAcceleratorTableW(LPACCEL lpaccl,int cEntries);
int  CreateCaret(HWND hWnd,HBITMAP hBitmap,int nWidth,int nHeight);
int  CreateCursor(HINSTANCE hInst,int xHotSpot,int yHotSpot,int nWidth,int nHeight,const VOID* pvANDPlane,const VOID* pvXORPlane);
int  CreateDesktop(LPCTSTR lpszDesktop,LPCTSTR lpszDevice,LPDEVMODE pDevmode,DWORD dwFlags,DWORD dwDesiredAccess,LPSECURITY_ATTRIBUTES lpsa);
int  CreateDesktopEx(LPCTSTR lpszDesktop,LPCTSTR lpszDevice,LPDEVMODE pDevmode,DWORD dwFlags,DWORD dwDesiredAccess,LPSECURITY_ATTRIBUTES lpsa,ULONG ulHeapSize,PVOID pvoid);
int  CreateDialogIndirectParam(HINSTANCE hInstance,LPCDLGTEMPLATE lpTemplate,HWND hWndParent,DLGPROC lpDialogFunc,LPARAM lParamInit);
int  CreateDialogIndirectParamA(HINSTANCE hInstance,LPCDLGTEMPLATE lpTemplate,HWND hWndParent,DLGPROC lpDialogFun,LPARAM lParamInit);
int  CreateDialogIndirectParamW(HINSTANCE hInstance,LPCDLGTEMPLATE lpTemplate,HWND hWndParent,DLGPROC lpDialogFun,LPARAM lParamInit);
int  CreateDialogParam(HINSTANCE hInstance,LPCTSTR lpTemplateName,HWND hWndParent,DLGPROC lpDialogFunc,LPARAM lParamInit);
int  CreateDialogParamA(HINSTANCE hInstance,LPCTSTR lpTemplateName,HWND hWndParent,DLGPROC lpDialogFunc,LPARAM dwInitParam);
int  CreateDialogParamW(HINSTANCE hInstance,LPCTSTR lpTemplateName,HWND hWndParent,DLGPROC lpDialogFunc,LPARAM dwInitParam);
int  CreateIcon(HINSTANCE hInstance,int nWidth,int Height,BYTE cPlanes,BYTE cBitsPixel,const BYTE* lpbANDbits,const BYTE* lpbXORbits);
int  CreateIconFromResource(PBYTE presbits,DWORD dwResSize,BOOL fIcon,DWORD dwVersion);
int  CreateIconFromResourceEx(PBYTE pbIconBits,DWORD cbIconBits,BOOL fIcon,DWORD dwVersion,int cxDesired,int cyDesired,UINT uFlags);
int  CreateIconIndirect(PICONINFO piconinfo);
int  CreateMDIWindow(LPCTSTR lpClassName,LPCTSTR lpWindowName,DWORD dwStyle,int X,int Y,int nWidth,int nHeight,HWND hWndParent,HINSTANCE hInstance,LPARAM lParam);
int  CreateMDIWindowA(LPCTSTR lpClassName,LPCTSTR lpWindowName,DWORD dwStyle,int X,int Y,int nWidth,int nHeight,HWND hWndParent,HINSTANCE hInstance,LPARAM lParam);
int  CreateMDIWindowW(LPCTSTR lpClassName,LPCTSTR lpWindowName,DWORD dwStyle,int X,int Y,int nWidth,int nHeight,HWND hWndParent,HINSTANCE hInstance,LPARAM lParam);
int  CreateMenu();
int  CreatePopupMenu();
int  CreateWindow(LPCTSTR lpClassName,LPCTSTR lpWindowName,DWORD dwStyle,int x,int y,int nWidth,int nHeight,HWND hWndParent,HMENU hMenu,HINSTANCE hInstance,LPVOID lpParam);
HWND  CreateWindowEx(DWORD dwExStyle,LPCSTR lpClassName,LPCSTR lpWindowName,DWORD dwStyle,int X,int Y,int nWidth,int nHeight,HWND hWndParent,HMENU hMenu,HINSTANCE hInstance,LPVOID lpParam);
HWND  CreateWindowExA(DWORD dwExStyle,LPCSTR lpClassName,LPCSTR lpWindowName,DWORD dwStyle,int X,int Y,int nWidth,int nHeight,HWND hWndParent,HMENU hMenu,HINSTANCE hInstance,LPVOID lpParam);
HWND  CreateWindowExW(DWORD dwExStyle,LPCWSTR lpClassName,LPCWSTR lpWindowName,DWORD dwStyle,int X,int Y,int nWidth,int nHeight,HWND hWndParent ,HMENU hMenu,HINSTANCE hInstance,LPVOID lpParam);
int  CreateWindowStation(LPCTSTR lpwinsta,DWORD dwFlags,DWORD dwDesiredAccess,LPSECURITY_ATTRIBUTES lpsa);
int  DdeAbandonTransaction(DWORD idInst,HCONV hConv,DWORD idTransaction);
int  DdeAccessData(HDDEDATA hData,LPDWORD pcbDataSize);
int  DdeAddData(HDDEDATA hData,LPBYTE pSrc,DWORD cb,DWORD cbOff);
int  DdeClientTransaction(LPBYTE pData,DWORD cbData,HCONV hConv,HSZ hszItem,UINT wFmt,UINT wType,DWORD dwTimeout,LPDWORD pdwResult);
int  DdeCmpStringHandles(HSZ hsz1,HSZ hsz2);
int  DdeConnect(DWORD idInst,HSZ hszService,HSZ hszTopic,PCONVCONTEXT pCC);
int  DdeConnectList(DWORD idInst,HSZ hszService,HSZ hszTopic,HCONVLIST hConvList,PCONVCONTEXT pCC);
int  DdeCreateDataHandle(DWORD idInst,LPBYTE pSrc,DWORD cb,DWORD cbOff,HSZ hszItem,UINT wFmt,UINT afCmd);
int  DdeCreateStringHandle(DWORD idInst,LPTSTR psz,int iCodePage);
int  DdeDisconnect(HCONV hConv);
int  DdeDisconnectList(HCONVLIST hConvList);
int  DdeEnableCallback(DWORD idInst,HCONV hConv,UINT wCmd);
int  DdeFreeDataHandle(HDDEDATA hData);
int  DdeFreeStringHandle(DWORD idInst,HSZ hsz);
int  DdeGetData(HDDEDATA hData,LPBYTE pDst,DWORD cbMax,DWORD cbOff);
int  DdeGetLastError(DWORD idInst);
int  DdeImpersonateClient(HCONV hConv);
int  DdeInitialize(LPDWORD pidInst,PFNCALLBACK pfnCallback,DWORD afCmd,DWORD ulRes);
int  DdeKeepStringHandle(DWORD idInst,HSZ hsz);
int  DdeNameService(DWORD idInst,UINT hsz1,UINT hsz2,UINT afCmd);
int  DdePostAdvise(DWORD idInst,HSZ hszTopic,HSZ hszItem);
int  DdeQueryConvInfo(HCONV hConv,DWORD idTransaction,PCONVINFO pConvInfo);
int  DdeQueryNextServer(HCONVLIST hConvList,HCONV hConvPrev);
int  DdeQueryString(DWORD idInst,HSZ hsz,LPTSTR psz,DWORD cchMax,int iCodePage);
int  DdeReconnect(HCONV hConv);
int  DdeSetQualityOfService(HWND hwndClient,const SECURITY_QUALITY_OF_SERVICE* pqosNew,PSECURITY_QUALITY_OF_SERVICE pqosPrev);
int  DdeSetUserHandle(HCONV hConv,DWORD id,DWORD_PTR hUser);
int  DdeUnaccessData(HDDEDATA hData);
int  DdeUninitialize(DWORD idInst);
int  DefDlgProc(HWND hDlg,UINT Msg,WPARAM wParam,LPARAM lParam);
int  DefDlgProcW(HWND hDlg,UINT Msg,WPARAM wParam,LPARAM lParam);
int  DefFrameProc(HWND hWnd,HWND hWndMDIClient,UINT uMsg,WPARAM wParam,LPARAM lParam);
int  DefFrameProcA(HWND hWnd,HWND hWndMDIClient,UINT uMsg,WPARAM wParam,LPARAM lParam);
int  DefFrameProcW(HWND hWnd,HWND hWndMDIClient,UINT uMsg,WPARAM wParam,LPARAM lParam);
int  DefMDIChildProc(HWND hWnd,UINT uMsg,WPARAM wParam,LPARAM lParam);
int  DefMDIChildProcA(HWND hWnd,UINT uMsg,WPARAM wParam,LPARAM lParam);
int  DefRawInputProc(PRAWINPUT* paRawInput,INT nInput,UINT cbSizeHeader);
LRESULT  DefWindowProc(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam);
LRESULT  DefWindowProcA(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam);
LRESULT  DefWindowProcW(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam);
int  DeferWindowPos(HDWP hWinPosInfo,HWND hWnd,HWND hWndInsertAfter,int x,int y,int cx,int cy,UINT uFlags);
int  DeleteMenu(HMENU hMenu,UINT uPosition,UINT uFlags);
int  DeregisterShellHookWindow(HWND hWnd);
int  DestroyAcceleratorTable(HACCEL hAccel);
int  DestroyCaret();
int  DestroyCursor(HCURSOR hCursor);
int  DestroyIcon(HICON hIcon);
int  DestroyMenu(HMENU hMenu);
int  DestroyWindow(HWND hWnd);
int  DialogBoxIndirectParam(HINSTANCE hInstance,LPCDLGTEMPLATE hDialogTemplate,HWND hWndParent,DLGPROC lpDialogFunc,LPARAM dwInitParam);
int  DialogBoxIndirectParamA(HINSTANCE hInstance,LPCDLGTEMPLATE hDialogTemplate,HWND hWndParent,DLGPROC pDialogFunc,LPARAM dwInitParam);
int  DialogBoxIndirectParamW(HINSTANCE hInstance,LPCDLGTEMPLATE hDialogTemplate,HWND hWndParent,DLGPROC pDialogFunc,LPARAM dwInitParam);
int  DialogBoxParam(HINSTANCE hInstance,LPCTSTR lpTemplateName,HWND hWndParent,DLGPROC lpDialogFunc,LPARAM dwInitParam);
int  DialogBoxParamA(HINSTANCE hInstance,LPCTSTR lpTemplateName,HWND hWnd,DLGPROC lpDialogFunc,LPARAM dwInitParam);
int  DialogBoxParamW(HINSTANCE hInstance,LPCTSTR lpTemplateName,HWND hWnd,DLGPROC lpDialogFunc,LPARAM dwInitParam);
long  DispatchMessage(const MSG *lpMsg);
long  DispatchMessageA(const MSG *lpMsg);
long  DispatchMessageW(const MSG *lpMsg);
int  DlgDirList(HWND hDlg,LPTSTR lpPathSpec,int nIDListBox,int nIDStaticPath,UINT uFileType);
int  DlgDirListComboBox(HWND hDlg,LPTSTR lpPathSpec,int nIDComboBox,int nIDStaticPath,UINT uFiletype);
int  DlgDirSelectComboBoxEx(HWND hDlg,LPTSTR lpString,int nCount,int nIDComboBox);
int  DlgDirSelectEx(HWND hDlg,LPTSTR lpString,int nCount,int nIDListBox);
int  DragDetect(HWND hwnd,POINT pt);
int  DrawAnimatedRects(HWND hWnd,int dAni,const RECT* lprcFrom,const RECT* lprcTo);
int  DrawCaption(HWND hwnd,HDC hdc,LPCRECT lprc,UINT uFlags);
int  DrawEdge(HDC hDC,LPRECT qrc,UINT edge,UINT grfFlags);
int  DrawFocusRect(HDC hDC,const RECT* lprc);
int  DrawFrameControl(HDC hDC,LPRECT lprc,UINT uType,UINT uState);
int  DrawIcon(HDC hDC,int X,int Y,HICON hIcon);
int  DrawIconEx(HDC hDC,int xLeft,int yTop,HICON hIcon,int cxWidth,int cyWidth,UINT istepIfAniCur,HBRUSH hbrFlickerFreeDraw,UINT diFlags);
int  DrawMenuBar(HWND hWnd);
int  DrawState(HDC hdc,HBRUSH hbr,DRAWSTATEPROC lpOutputFunc,LPARAM lData,WPARAM wData,int x,int y,int cx,int cy,UINT fuFlags);
int  DrawStateA(HDC hDC,HBRUSH hbr,DRAWSTATEPROC lpOutputFunc,LPARAM lData,WPARAM wData,int X,int Y,int cx,int cy,UINT fuFlags);
int  DrawStateW(HDC hDC,HBRUSH hbr,DRAWSTATEPROC lpOutputFunc,LPARAM lData,WPARAM wData,int X,int Y,int cx,int cy,UINT fuFlags);
int  DrawText(HDC hDC,LPCTSTR lpchText,int nCount,LPRECT lpRect,UINT uFormat);
int  DrawTextA(HDC hDC,LPCTSTR lpString,int nCount,LPRECT lpRect,UINT uFormat);
int  DrawTextEx(HDC hdc,LPTSTR lpchText,int cchText,LPRECT lprc,UINT dwDTFormat,LPDRAWTEXTPARAMS lpDTParams);
int  DrawTextExA(HDC hDC,LPTSTR lpchText,int cchText,LPRECT lprc,UINT dwDTFormat,LPDRAWTEXTPARAMS lpDTParams);
int  DrawTextExW(HDC hDC,LPTSTR lpchText,int cchText,LPRECT lprc,UINT dwDTFormat,LPDRAWTEXTPARAMS lpDTParams);
int  DrawTextW(HDC hDC,LPCTSTR lpString,int nCount,LPRECT lpRect,UINT uFormat);
int  EmptyClipboard();
int  EnableMenuItem(HMENU hMenu,UINT uIDEnableItem,UINT uEnable);
int  EnableScrollBar(HWND hWnd,UINT WSBflags,UINT wArrows);
int  EnableWindow(HWND hWnd,BOOL bEnable);
int  EndDeferWindowPos(HDWP hWinPosInfo);
int  EndDialog(HWND hDlg,INT_PTR nResult);
int  EndMenu();
int  EndPaint(HWND hWnd,const PAINTSTRUCT* lpPaint);
int  EndTask(HWND hWnd,BOOL fShutDown,BOOL fForce);
int  EnumChildWindows(HWND hWndParent,WNDENUMPROC lpEnumFunc,LPARAM lParam);
int  EnumClipboardFormats(UINT format);
int  EnumDesktopWindows(HDESK hDesktop,WNDENUMPROC lpfn,LPARAM lParam);
int  EnumDesktops(HWINSTA hwinsta,DESKTOPENUMPROC lpEnumFunc,LPARAM lParam);
int  EnumDisplayDevices(LPCTSTR lpReserved,DWORD iDeviceNum,PDISPLAY_DEVICE pDisplayDevice,DWORD dwFlags);
int  EnumDisplayMonitors(DWORD hDesktop,DWORD lpfn,DWORD lParam);
int  EnumDisplayMonitors(HDC hdc,LPCRECT lprcClip,MONITORENUMPROC lpfnEnum,LPARAM dwData);
int  EnumDisplaySettings(LPCTSTR lpszDeviceName,int iModeNum,DEVMODE* lpDevMode);
int  EnumDisplaySettingsA(LPCTSTR lpszDeviceName,int iModeNum,DEVMODE* lpDevMode);
int  EnumDisplaySettingsEx(LPCTSTR lpszDeviceName,DWORD iModeNum,DEVMODE* lpDevMode,DWORD dwFlags);
int  EnumProps(HWND hWnd,PROPENUMPROC lpEnumFunc);
int  EnumPropsEx(HWND hWnd,PROPENUMPROCEX lpEnumFunc,LPARAM lParam);
int  EnumThreadWindows(DWORD dwThreadId,WNDENUMPROC lpfn,LPARAM lParam);
int  EnumWindowStations(WINSTAENUMPROC lpEnumFunc,LPARAM lParam);
int  EnumWindows(WNDENUMPROC lpEnumFunc,LPARAM lParam);
int  EqualRect(const RECT* lprc1,const RECT* lprc2);
int  ExcludeUpdateRgn(HDC hDC,HWND hWnd);
int  ExitWindowsEx(UINT uFlags,DWORD dwReserved);
int  FillRect(HDC hDC,const RECT* lprc,HBRUSH hbr);
int  FindWindow(LPCTSTR lpClassName,LPCTSTR lpWindowName);
int  FindWindowA(LPCTSTR lpClassName,LPCTSTR lpWindowName);
int  FindWindowEx(HWND hwndParent,HWND hwndChildAfter,LPCTSTR lpszClass,LPCTSTR lpszWindow);
int  FindWindowExA(HWND hwndParent,HWND hwndChildAfter,LPCTSTR lpszClass,LPCTSTR pszWindow);
int  FindWindowExW(HWND hwndParent,HWND hwndChildAfter,LPCTSTR lpszClass,LPCTSTR pszWindow);
int  FindWindowW(LPCTSTR lpClassName,LPCTSTR lpWindowName);
int  FlashWindow(HWND hWnd,BOOL bInvert);
int  FlashWindowEx(PFLASHWINFO pfwi);
int  FrameRect(HDC hDC,const RECT* lprc,HBRUSH hbr);
int  FreeDDElParam(UINT msg,LPARAM lParam);
int  GetActiveWindow();
int  GetAltTabInfo(HWND hwnd,int iItem,PALTTABINFO pati,LPTSTR pszItemText,UINT cchItemText);
int  GetAncestor(HWND hwnd,DWORD gaFlags);
int  GetAsyncKeyState(int vKey);
int  GetCapture();
int  GetCaretBlinkTime();
int  GetCaretPos(LPPOINT lpPoint);
int  GetClassInfo(HINSTANCE hInstance,LPCTSTR lpClassName,LPWNDCLASS lpWndClass);
int  GetClassInfoA(HINSTANCE hInstance,LPCTSTR lpClassName,LPWNDCLASS lpWndClass);
int  GetClassInfoEx(HINSTANCE hinst,LPCTSTR lpszClass,LPWNDCLASSEX lpwcx);
int  GetClassInfoExA(HINSTANCE hinst,LPCTSTR lpszClass,LPWNDCLASSEX lpwcx);
int  GetClassInfoExW(HINSTANCE hinst,LPCTSTR lpszClass,LPWNDCLASSEX lpwcx);
int  GetClassInfoW(HINSTANCE hInstance,LPCTSTR lpClassName,LPWNDCLASS lpWndClass);
int  GetClassLong(HWND hWnd,int nIndex);
int  GetClassLongA(HWND hWnd,int nIndex);
int  GetClassLongW(HWND hWnd,int nIndex);
int  GetClassName(HWND hWnd,LPTSTR lpClassName,int nMaxCount);
int  GetClassNameA(HWND hWnd,LPTSTR lpBuffer,int nBufferSize);
int  GetClassNameW(HWND hWnd,LPTSTR lpBuffer,int nBufferSize);
int  GetClassWord(HWND hWnd,int nIndex);
int  GetClientRect(HWND hWnd,LPRECT lpRect);
int  GetClipCursor(LPRECT lpRect);
int  GetClipboardData(UINT uFormat);
int  GetClipboardFormatName(UINT format,LPTSTR lpszFormatName,int cchMaxCount);
int  GetClipboardFormatNameA(UINT format,LPTSTR lpBuffer,int cchMaxCount);
int  GetClipboardOwner();
int  GetClipboardSequenceNumber();
int  GetClipboardViewer();
int  GetComboBoxInfo(HWND hWndCombo,PCOMBOBOXINFO pcbi);
int  GetCursor();
int  GetCursorInfo(PCURSORINFO pci);
int  GetCursorPos(LPPOINT lpPoint);
int  GetDC(HWND hwnd);
int  GetDCEx(HWND hWnd,HRGN hrgnClip,UINT flags);
HWND  GetDesktopWindow();
int  GetDialogBaseUnits();
int  GetDlgCtrlID(HWND hwndCtl);
int  GetDlgItem(HWND hDlg,int nIDDlgItem);
int  GetDlgItemInt(HWND hDlg,int nIDDlgItem,BOOL* lpTranslated,BOOL bSigned);
int  GetDlgItemText(HWND hDlg,int nIDDlgItem,LPTSTR lpString,int nMaxCount);
int  GetDlgItemTextA(HWND hDlg,int nIDDlgItem,LPTSTR lpBuffer,int nBufferSize);
int  GetDlgItemTextW(HWND hDlg,int nIDDlgItem,LPTSTR lpBuffer,int nBufferSize);
int  GetDoubleClickTime();
int  GetFocus();
int  GetForegroundWindow();
int  GetGUIThreadInfo(DWORD idThread,LPGUITHREADINFO lpgui);
int  GetGestureConfig(HWND hwnd,DWORD dwReserved,DWORD dwFlags,PUINT pcIDs,PGESTURECONFIG pGestureConfig,UINT cbSize);
int  GetGestureExtraArgs(HGESTUREINFO hGestureInfo,UINT cbExtraArgs,PBYTE pExtraArgs);
int  GetGestureInfo(HGESTUREINFO hGestureInfo,PGESTUREINFO pGestureInfo);
int  GetGuiResources(HANDLE hProcess,DWORD uiFlags);
int  GetIconInfo(HICON hIcon,PICONINFO piconinfo);
int  GetIconInfoEx(HICON hIcon,PICONINFOEX piconinfoex);
int  GetInputState();
int  GetKBCodePage();
int  GetKeyNameText(LONG lParam,LPTSTR lpString,int nSize);
int  GetKeyNameTextA(LONG lParam,LPTSTR lpString,int nSize);
int  GetKeyNameTextW(LONG lParam,LPTSTR lpString,int nSize);
int  GetKeyState(int nVirtKey);
int  GetKeyboardLayout(DWORD dwLayout);
int  GetKeyboardLayoutList(int nBuff,HKL* lpList);
int  GetKeyboardLayoutName(LPTSTR pwszKLID);
int  GetKeyboardLayoutNameA(LPTSTR pwszKLID);
int  GetKeyboardLayoutNameW(LPTSTR pwszKLID);
int  GetKeyboardState(PBYTE lpKeyState);
int  GetKeyboardType(int nTypeFlag);
int  GetLastActivePopup(HWND hWnd);
int  GetLastInputInfo(PLASTINPUTINFO plii);
int  GetLayeredWindowAttributes(HWND hwnd,COLORREF* pcrKey,BYTE* pbAlpha,DWORD pdwFlags);
int  GetListBoxInfo(HWND hwnd);
int  GetMenu(HWND hWnd);
int  GetMenuBarInfo(HWND hwnd,UINT idObject,LONG idItem,PMENUBARINFO pmbi);
int  GetMenuCheckMarkDimensions();
int  GetMenuContextHelpId(HMENU hmenu);
int  GetMenuDefaultItem(HMENU hMenu,UINT fByPos,UINT gmdiFlags);
int  GetMenuInfo(HMENU hMenu,LPCMENUINFO lpcMenuInfo);
int  GetMenuItemCount(HMENU hMenu);
int  GetMenuItemID(HMENU hMenu,int nPos);
int  GetMenuItemInfo(HMENU hMenu,UINT uItem,BOOL fByPosition,LPMENUITEMINFO lpmii);
int  GetMenuItemInfoA(HMENU hMenu,UINT uItem,BOOL fByPosition,LPMENUITEMINFO lpmii);
int  GetMenuItemInfoW(HMENU hMenu,UINT uItem,BOOL fByPosition,LPMENUITEMINFO lpmii);
int  GetMenuItemRect(HWND hWnd,HMENU hMenu,UINT uItem,LPRECT lprcItem);
int  GetMenuState(HMENU hMenu,UINT uId,UINT uFlags);
int  GetMenuString(HMENU hMenu,UINT uIDItem,LPTSTR lpString,int nMaxCount,UINT uFlag);
int  GetMenuStringA(HMENU hMenu,UINT uIDItem,LPTSTR lpBuffer,int nBufferSize,UINT uFlag);
int  GetMenuStringW(HMENU hMenu,UINT uIDItem,LPTSTR lpBuffer,int nBufferSize,UINT uFlag);
bool  GetMessage(LPMSG lpMsg,HWND hWnd,UINT wMsgFilterMin,UINT wMsgFilterMax);
BOOL  GetMessageA(LPMSG lpMsg,HWND hWnd,UINT wMsgFilterMin,UINT wMsgFilterMax);
int  GetMessageExtraInfo();
int  GetMessagePos();
int  GetMessageTime();
BOOL  GetMessageW(LPMSG lpMsg,HWND hWnd,UINT wMsgFilterMin,UINT wMsgFilterMax);
int  GetMonitorInfo(HMONITOR hMonitor,LPMONITORINFO lpmi);
int  GetMonitorInfoW(HMONITOR hMonitor,LPMONITORINFO lpMonitorIfno);
int  GetMouseMovePointsEx(UINT cbSize,LPMOUSEMOVEPOINT lppt,LPMOUSEMOVEPOINT lpptBuf,int nBufPoints,DWORD resolution);
int  GetNextDlgGroupItem(HWND hDlg,HWND hCtl,BOOL bPrevious);
int  GetNextDlgTabItem(HWND hDlg,HWND hCtl,BOOL bPrevious);
int  GetOpenClipboardWindow();
int  GetParent(HWND hWnd);
int  GetPhysicalCursorPos(LPPOINT lpPoint);
int  GetPriorityClipboardFormat(UINT* paFormatPriorityList,int cFormats);
int  GetProcessDefaultLayout(DWORD* pdwDefaultLayout);
int  GetProcessWindowStation();
int  GetProp(HWND hWnd,LPCTSTR lpString);
int  GetPropA(HWND hWnd,LPCTSTR lpString);
int  GetPropW(HWND hWnd,LPCTSTR lpString);
int  GetQueueStatus(DWORD flags);
int  GetRawInputBuffer(PRAWINPUT pData,PUINT pcbSize,UINT cbSizeHeader);
int  GetRawInputData(HRAWINPUT hRawInput,UINT uiCommand,LPVOID pData,PUINT pcbSize,UINT cbSizeHeader);
int  GetRawInputDeviceInfo(HANDLE hDevice,UINT uiCommand,LPVOID pData,PUINT pcbSize);
int  GetRawInputDeviceList(PRAWINPUTDEVICELIST pRawInputDeviceList,PUINT puiNumDevices,UINT cbSize);
int  GetRegisteredRawInputDevices(PRAWINPUTDEVICE pRawInputDevices,PUINT puiNumDevices,UINT cbSize);
int  GetScrollBarInfo(HWND hWnd,UINT fnBar,PSCROLLBARINFO lpsi);
int  GetScrollInfo(HWND hWnd,int fnBar,LPSCROLLINFO lpScorllInfo);
int  GetScrollPos(HWND hWnd,int nBar);
int  GetScrollRange(HWND hWnd,int nBar,LPINT lpMinPos,LPINT lpMaxPos);
int  GetShellWindow();
int  GetSubMenu(HMENU hMenu,int nPos);
int  GetSysColor(int nIndex);
int  GetSysColorBrush(int nIndex);
int  GetSystemMenu(HWND hWnd,BOOL bRevert);
int  GetSystemMetrics(int nIndex);
int  GetTabbedTextExtent(HDC hDC,LPCTSTR lpString,int nCount,int nTabPositions,const LPINT lpnTabStopPositions);
int  GetTabbedTextExtentA(HDC hDC,LPCTSTR lpString,int nCount,int nTabPositions,const LPINT lpnTabStopPositions);
int  GetTabbedTextExtentW(HDC hDC,LPCTSTR lpString,int nCount,int nTabPositions,const LPINT lpnTabStopPositions);
int  GetThreadDesktop(DWORD dwThreadId);
int  GetTitleBarInfo(HWND hwnd,PTITLEBARINFO pti);
int  GetTopWindow(HWND hWnd);
int  GetTouchInputInfo(HTOUCHINPUT hTouchInput,UINT cInputs,PTOUCHINPUT pInputs,int cbSize);
int  GetUpdateRect(HWND hWnd,LPRECT lpRect,BOOL bErase);
int  GetUpdateRgn(HWND hWnd,HRGN hRgn,BOOL bErase);
int  GetUpdatedClipboardFormats(PUINT lpuiFormats,UINT cFormats,PUINT pcFormatsOut);
int  GetUserObjectInformation(HANDLE hObj,UINT nIndex,PVOID pvInfo,DWORD nLength,LPDWORD lpnLengthNeeded);
int  GetUserObjectInformationA(HANDLE hActiveDesktop,UINT nIndex,PVOID pvInfo,DWORD nBuffLen,LPDWORD dwSize);
int  GetUserObjectSecurity(HANDLE hObj,PSECURITY_INFORMATION pSIRequested,PSECURITY_DESCRIPTOR pSD,DWORD nLength,LPDWORD lpnLengthNeeded);
int  GetWindow(HWND hWnd,UINT uCmd);
int  GetWindowContextHelpId(HWND hWnd);
int  GetWindowDC(HWND hWnd);
int  GetWindowDisplayAffinity(HWND hWnd,DWORD* dwAffinity);
int  GetWindowInfo(HWND hwnd,PWINDOWINFO pwi);
int  GetWindowLong(HWND hWnd,int nIndex);
int  GetWindowLongA(HWND hWnd,int nIndex);
int  GetWindowLongW(HWND hWnd,int nIndex);
int  GetWindowModuleFileName(HWND hwnd,LPTSTR lpszFileName,UINT cchFileNameMax);
int  GetWindowPlacement(HWND hWnd,WINDOWPLACEMENT* lpwndpl);
int  GetWindowRect(HWND hWnd,LPRECT lpRect);
int  GetWindowRgn(HWND hWnd,HRGN hRgn);
int  GetWindowRgnBox(HWND hWnd,LPRECT lprc);
int  GetWindowText(HWND hWnd,LPTSTR lpString,int nMaxCount);
int  GetWindowTextA(HWND hWnd,LPTSTR lpString,int nMaxCount);
int  GetWindowTextLength(HWND hWnd);
int  GetWindowTextLengthA(HWND hWnd);
int  GetWindowTextLengthW(HWND hWnd);
int  GetWindowTextW(HWND hWnd,LPTSTR lpString,int nMaxCount);
int  GetWindowThreadProcessId(HWND hWnd,LPDWORD lpdwProcessId);
int  GrayString(HDC hDC,HBRUSH hBrush,GRAYSTRINGPROC lpOutputFunc,LPARAM lpData,int nCount,int X,int Y,int nWidth,int nHeight);
int  GrayStringA(HDC hDC,HBRUSH hBrush,GRAYSTRINGPROC lpOutputFunc,LPARAM lpData,int nCount,int X,int Y,int nWidth,int nHeight);
int  GrayStringW(HDC hDC,HBRUSH hBrush,GRAYSTRINGPROC lpOutputFunc,LPARAM lpData,int nCount,int X,int Y,int nWidth,int nHeight);
int  HideCaret(HWND hWnd);
int  HiliteMenuItem(HWND hwnd,HMENU hmenu,UINT uItemHilite,UINT uHilite);
int  ImpersonateDdeClientWindow(HWND hWndClient,HWND hWndServer);
int  InSendMessage();
int  InSendMessageEx(LPVOID lpReserved);
int  InflateRect(LPRECT lpRect,int x,int y);
int  InsertMenu(HMENU hMenu,UINT uPosition,UINT uFlags,UINT_PTR uIDNewItem,LPCTSTR lpNewItem);
int  InsertMenuA(HMENU hMenu,UINT nPosition,UINT wFlags,UINT_PTR wIDNewItem,LPCTSTR lpNewItem);
int  InsertMenuItem(HMENU hMenu,UINT uItem,BOOL fByPosition,LPCMENUITEMINFO lpmii);
int  InsertMenuItemA(HMENU hMenu,UINT uItem,BOOL fByPosition,LPCMENUITEMINFO lpmii);
int  InsertMenuItemW(HMENU hMenu,UINT uItem,BOOL fByPosition,LPCMENUITEMINFO lpmii);
int  InsertMenuW(HMENU hMenu,UINT nPosition,UINT wFlags,UINT_PTR wIDNewItem,LPCTSTR lpNewItem);
int  InternalGetWindowText(HWND hWnd,LPWSTR lpString,int nMaxCount);
int  IntersectRect(LPRECT lprcDst,const RECT* lprcSrc1,const RECT* lprcSrc2);
int  InvalidateRect(HWND hWnd,const RECT* lpRect,BOOL bErase);
int  InvalidateRgn(HWND hWnd,HRGN hRgn,BOOL bErase);
int  InvertRect(HDC hDC,const RECT* lprc);
int  IsCharAlpha(TCHAR ch);
int  IsCharAlphaNumeric(TCHAR ch);
int  IsCharAlphaNumericA(TCHAR char);
int  IsCharAlphaNumericW(TCHAR char);
int  IsCharLower(TCHAR ch);
int  IsCharLowerA(TCHAR char);
int  IsCharUpper(TCHAR ch);
int  IsChild(HWND hWndParent,HWND hWnd);
int  IsClipboardFormatAvailable(UINT format);
BOOL  IsDialogMessage(HWND hDlg,LPMSG lpMsg);
BOOL  IsDialogMessageA(HWND hDlg,LPMSG lpMsg);
BOOL  IsDialogMessageW(HWND hDlg,LPMSG lpMsg);
int  IsDlgButtonChecked(HWND hDlg,int nIDButton);
int  IsGUIThread(BOOL bConvert);
int  IsHungAppWindow(HWND hWnd);
int  IsIconic(HWND hWnd);
int  IsMenu(HMENU hMenu);
int  IsProcessDPIAware();
int  IsRectEmpty(const RECT* lprc);
int  IsTouchWindow(HWND hWnd,PULONG pulFlags);
int  IsWinEventHookInstalled(DWORD event);
int  IsWindow(HWND hWnd);
int  IsWindowEnabled(HWND hWnd);
int  IsWindowUnicode(HWND hWnd);
int  IsWindowVisible(HWND hWnd);
int  IsWow64Message();
int  IsZoomed(HWND hWnd);
int  KillTimer(HWND hWnd,UINT_PTR nIDEvent);
HACCEL  LoadAccelerators(HINSTANCE hInstance,LPCSTR lpTableName);
HACCEL  LoadAcceleratorsA(HINSTANCE hInstance,LPCSTR lpTableName);
HACCEL  LoadAcceleratorsW(HINSTANCE hInstance,LPCWSTR lpTableName);
int  LoadBitmap(HINSTANCE hInstance,LPCTSTR lpBitmapName);
int  LoadBitmapA(HINSTANCE hInstance,LPCTSTR lpBitmapName);
int  LoadBitmapW(HINSTANCE hInstance,LPCTSTR lpBitmapName);
HCURSOR  LoadCursor(HINSTANCE hInstance,LPCTSTR lpCursorName);
HCURSOR  LoadCursorA(HINSTANCE hInstance,LPCTSTR lpCursorName);
int  LoadCursorFromFile(LPCTSTR lpFileName);
int  LoadCursorFromFileA(LPCTSTR lpFileName);
int  LoadCursorFromFileW(LPCTSTR lpFileName);
HCURSOR  LoadCursorW(HINSTANCE hInstance,LPCTSTR lpCursorName);
HICON  LoadIcon(HINSTANCE hInstance,LPCSTR lpIconName);
HICON  LoadIconA(HINSTANCE hInstance,LPCSTR lpIconName);
HICON  LoadIconW(HINSTANCE hInstance,LPCSTR lpIconName);
int  LoadImage(HINSTANCE hinst,LPCTSTR lpszName,UINT uType,int cxDesired,int cyDesired,UINT fuLoad);
int  LoadImageA(HINSTANCE hinst,LPCTSTR lpszName,UINT uType,int Width,int Height,UINT Options);
int  LoadImageW(HINSTANCE hinst,LPCTSTR lpszName,UINT uType,int Width,int Height,UINT Options);
int  LoadKeyboardLayout(LPCTSTR pwszKLID,UINT Flags);
int  LoadKeyboardLayoutA(LPCTSTR lpwszKLID,UINT Flags);
int  LoadKeyboardLayoutW(LPCTSTR lpwszKLID,UINT Flags);
int  LoadMenu(HINSTANCE hInstance,LPCTSTR lpMenuName);
int  LoadMenuA(HINSTANCE hInstance,LPCTSTR lpMenuName);
int  LoadMenuIndirect(CONST MENUTEMPLATE* lpMenuTemplate);
int  LoadMenuIndirectA(CONST MENUTEMPLATE* lpMenuTemplate);
int  LoadMenuIndirectW(CONST MENUTEMPLATE* lpMenuTemplate);
int  LoadMenuW(HINSTANCE hInstance,LPCTSTR lpMenuName);
int  LoadString(HINSTANCE hInstance,UINT uID,LPTSTR lpBuffer,int nBufferMax);
int  LoadStringA(HINSTANCE hInstance,UINT uID,LPTSTR lpBuffer,int nBufferMax);
int  LoadStringW(HINSTANCE hInstance,UINT uID,LPTSTR lpBuffer,int nBufferMax);
int  LockSetForegroundWindow(UINT uLockCode);
int  LockWindowUpdate(HWND hWndLock);
int  LockWorkStation();
int  LogicalToPhysicalPoint(HWND hWnd,LPPOINT lpPoint);
int  LookupIconIdFromDirectory(PBYTE presbits,BOOL fIcon);
int  LookupIconIdFromDirectoryEx(PBYTE presbits,BOOL fIcon,int cxDesired,int cyDesired,UINT Flags);
int  MapDialogRect(HWND hDlg,LPRECT IpRect);
int  MapVirtualKey(UINT uCode,UINT uMapType);
int  MapVirtualKeyA(UINT uCode,UINT uMapType);
int  MapVirtualKeyEx(UINT uCode,UINT uMapType,HKL dwhkl);
int  MapVirtualKeyExA(UINT uCode,UINT uMapType,HKL dwhkl);
int  MapVirtualKeyExW(UINT uCode,UINT uMapType,HKL dwhkl);
int  MapVirtualKeyW(UINT uCode,UINT uMapType);
int  MapWindowPoints(HWND hWndFrom,HWND hWndTo,LPPOINT lpPoints,UINT cPoints);
int  MenuItemFromPoint(HWND hWnd,HMENU hMenu,POINT ptScreen);
int  MessageBeep(UINT uType);
int  MessageBox(HWND hWnd,LPCTSTR lpText,LPCTSTR lpCaption,UINT uType);
int  MessageBoxA(HWND hWnd,LPCTSTR lpText,LPCTSTR lpCaption,UINT uType);
int  MessageBoxEx(HWND hWnd,LPCTSTR lpText,LPCTSTR lpCaption,UINT uType,WORD wLanguageId);
int  MessageBoxExA(HWND hWnd,LPCTSTR lpText,LPCTSTR lpCaption,UINT uType,WORD wLanguageId);
int  MessageBoxExW(HWND hWnd,LPCTSTR lpText,LPCTSTR lpCaption,UINT uType,WORD wLanguageId);
int  MessageBoxIndirect(const LPMSGBOXPARAMS lpMsgBoxParams);
int  MessageBoxIndirectA(const LPMSGBOXPARAMS lpMsgBoxParams);
int  MessageBoxIndirectW(const LPMSGBOXPARAMS lpMsgBoxParamsW);
int  MessageBoxTimeout(HWND hWnd,LPCTSTR lpText,LPCTSTR lpCaption,UINT uType,WORD wLanguageId,DWORD dwMilliseconds);
int  MessageBoxW(HWND hWnd,LPCTSTR lpText,LPCTSTR lpCaption,UINT uType);
int  ModifyMenu(HMENU hMnu,UINT uPosition,UINT uFlags,UINT_PTR uIDNewItem,LPCTSTR lpNewItem);
int  ModifyMenuA(HMENU hMenu,UINT uPosition,UINT uFlags,UINT_PTR uIDNewItem,LPCTSTR lpNewItem);
int  ModifyMenuW(HMENU hMenu,UINT uPosition,UINT uFlags,UINT_PTR uIDNewItem,LPCTSTR lpNewItem);
int  MonitorFromPoint(POINT pt,DWORD dwFlags);
int  MonitorFromRect(LPCRECT lprc,DWORD dwFlags);
int  MonitorFromWindow(DWORD hWnd,DWORD dwFlags);
int  MonitorFromWindow(HWND hwnd,DWORD dwFlags);
int  MoveWindow(HWND hWnd,int X,int Y,int nWidth,int nHeight,BOOL bRepaint);
int  MsgWaitForMultipleObjects(DWORD nCount,const HANDLE* pHandles,BOOL fWaitAll,DWORD dwMilliseconds,DWORD dwWakeMask);
int  MsgWaitForMultipleObjectsEx(DWORD nCount,const HANDLE* pHandles,DWORD dwMilliseconds,DWORD dwWakeMask,DWORD dwFlags);
int  NotifyWinEvent(DWORD event,HWND hwnd,LONG idObject,LONG idChild);
int  OemKeyScan(WORD wOemChar);
int  OemToChar(LPCSTR lpszSrc,LPTSTR lpszDst);
int  OemToCharA(LPCSTR lpszSrc,LPTSTR lpszDst);
int  OemToCharBuff(LPCTSTR lpszSrc,LPTSTR lpszDst,DWORD cchDstLength);
int  OemToCharBuffA(LPCTSTR lpszSrc,LPTSTR lpszDst,DWORD cchDstLength);
int  OemToCharBuffW(LPCTSTR lpszSrc,LPTSTR lpszDst,DWORD cchDstLength);
int  OemToCharW(LPCSTR lpszSrc,LPTSTR lpszDst);
int  OffsetRect(LPRECT lprc,int dx,int dy);
int  OpenClipboard(HWND hWndNewOwner);
int  OpenDesktop(LPTSTR lpszDesktop,DWORD dwFlags,BOOL fInherit,DWORD dwDesiredAccess);
int  OpenIcon(HWND hWnd);
int  OpenInputDesktop(DWORD dwFlags,BOOL fInherit,DWORD dwDesiredAccess);
int  OpenWindowStation(LPTSTR lpszWinSta,BOOL fInherit,DWORD dwDesiredAccess);
int  PackDDElParam(UINT msg,UINT_PTR uiLo,UINT_PTR uiHi);
int  PaintDesktop(HDC hDC);
int  PeekMessage(LPMSG lpMsg,HWND hWnd,UINT wMsgFilterMin,UINT wMsgFilterMax,UINT wRemoveMsg);
int  PeekMessageA(LPMSG lpMsg,HWND hWnd,UINT wMsgFilterMin,UINT wMsgFilterMax,UINT wRemoveMsg);
int  PeekMessageW(LPMSG lpMsg,HWND hWnd,UINT wMsgFilterMin,UINT wMsgFilterMax,UINT wRemoveMsg);
int  PhysicalToLogicalPoint(HWND hWnd,LPPOINT lpPoint);
int  PostMessage(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam);
int  PostMessageA(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM Param);
int  PostMessageW(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM Param);
int  PostQuitMessage(int nExitCode);
int  PostThreadMessage(DWORD idThread,UINT Msg,WPARAM wParam,LPARAM lParam);
int  PostThreadMessageA(DWORD idThread,UINT Msg,WPARAM wParam,LPARAM lParam);
int  PostThreadMessageW(DWORD idThread,UINT Msg,WPARAM wParam,LPARAM lParam);
int  PrintWindow(HWND hwnd,HDC hdcBlt,UINT nFlags);
int  PrivateExtractIcons(LPCTSTR lpszFile,int nIconIndex,int cxIcon,int cyIcon,HICON* phicon,UINT* piconid,UINT nIcons,UINT flags);
int  PtInRect(const RECT* lprc,POINT pt);
int  RealChildWindowFromPoint(HWND hwndParent,POINT ptParentClientCoords);
int  RealGetWindowClass(HWND hwnd,LPTSTR pszType,UINT cchType);
int  RedrawWindow(HWND hWnd,const RECT* lprcUpdate,HRGN hrgnUpdate,UINT flags);
ATOM  RegisterClass(CONST WNDCLASS* lpWndClass);
ATOM  RegisterClassA(CONST WNDCLASS* lpWndClass);
ATOM  RegisterClassW(const WNDCLASS* lpWndClass);
ATOM  RegisterClassEx(CONST WNDCLASSEX* lpwcx);
ATOM  RegisterClassExA(CONST WNDCLASSEX* lpWndClassEx);
ATOM  RegisterClassExW(CONST WNDCLASSEX* lpWndClassEx);
int  RegisterClassW(CONST WNDCLASS* lpWndClass);
int  RegisterClipboardFormat(LPCTSTR lpszFormat);
int  RegisterClipboardFormatA(LPCTSTR lpszFormat);
int  RegisterClipboardFormatW(LPCTSTR lpszFormat);
int  RegisterDeviceNotification(HANDLE hRecipient,LPVOID NotificationFilter,UINT Flags);
int  RegisterHotKey(HWND hWnd,int id,UINT fsModifiers,UINT vk);
int  RegisterPowerSettingNotification(HANDLE hRecipient,LPCGUID PowerSettingGuid,UINT Flags);
int  RegisterRawInputDevices(PCRAWINPUTDEVICE pRawInputDevices,UINT uiNumDevices,UINT cbSize);
int  RegisterShellHookWindow(HWND hWnd);
int  RegisterTouchWindow(HWND hWnd,ULONG ulFlags);
int  RegisterWindowMessage(LPCTSTR lpString);
int  RegisterWindowMessageA(LPCTSTR lpString);
int  RegisterWindowMessageW(LPCTSTR lpString);
int  ReleaseCapture();
int  ReleaseDC(HWND hWnd,HDC hDC);
int  RemoveClipboardFormatListener(HWND hwnd);
int  RemoveMenu(HMENU hMenu,UINT uPosition,UINT uFlags);
int  RemoveProp(HWND hWnd,LPCTSTR lpString);
int  RemovePropA(HWND hWnd,LPCTSTR lpString);
int  RemovePropW(HWND hWnd,LPCTSTR lpString);
int  ReplyMessage(LRESULT lResult);
int  ReuseDDElParam(LPARAM lParam,UINT msgIn,UINT msgOut,UINT_PTR uiLo,UINT_PTR uiHi);
int  ScreenToClient(HWND hWnd,LPPOINT lpPoint);
int  ScrollDC(HDC hDC,int dx,int dy,const RECT* lprcScroll,const RECT* lprcClip,HRGN hrgnUpdate,LPRECT lprcUpdate);
int  ScrollWindow(HWND hWnd,int XAmount,int YAmount,const RECT* lpRect,const RECT* lpClipRect);
int  ScrollWindowEx(HWND hWnd,int dx,int dy,const RECT* prcScroll,const RECT* prcClip,HRGN hrgnUpdate,LPRECT prcUpdate,UINT flags);
int  SendDlgItemMessage(HWND hDlg,int nIDDlgItem,UINT Msg,WPARAM wParam,LPARAM lParam);
int  SendDlgItemMessageA(HWND hDlg,int nIDDlgItem,UINT Msg,WPARAM wParam,LPARAM lParam);
int  SendInput(UINT nInputs,LPINPUT pInputs,int cbSize);
int  SendMessage(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam);
int  SendMessageA(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM Param);
int  SendMessageCallback(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam,SENDASYNCPROC lpCallBack,ULONG_PTR dwData);
int  SendMessageCallbackA(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam,SENDASYNCPROC lpResultCallBack,ULONG_PTR dwData);
int  SendMessageCallbackW(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam,SENDASYNCPROC lpResultCallBack,ULONG_PTR dwData);
int  SendMessageTimeout(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam,UINT fuFlags,UINT uTimeout,PDWORD_PTR lpdwResult);
int  SendMessageTimeoutA(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam,UINT fuFlags,UINT uTimeout,PDWORD_PTR lpdwResult);
int  SendMessageTimeoutW(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam,UINT fuFlags,UINT uTimeout,PDWORD_PTR lpdwResult);
int  SendMessageW(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM Param);
int  SendNotifyMessage(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam);
int  SendNotifyMessageA(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam);
int  SendNotifyMessageW(HWND hWnd,UINT Msg,WPARAM wParam,LPARAM lParam);
int  SetActiveWindow(HWND hWnd);
int  SetCapture(HWND hWnd);
int  SetCaretBlinkTime(UINT uMSeconds);
int  SetCaretPos(int X,int Y);
int  SetClassLong(HWND hWnd,int nIndex,LONG dwNewLong);
int  SetClassLongA(HWND hWnd,int nIndex,LONG dwNewLong);
int  SetClassLongW(HWND hWnd,int nIndex,LONG dwNewLong);
int  SetClassWord(HWND hWnd,int nIndex,WORD wNewWord);
int  SetClipboardData(UINT uFormat,HANDLE hMem);
int  SetClipboardViewer(HWND hWndNewViewer);
int  SetCursor(HCURSOR hCursor);
int  SetCursorPos(int X,int Y);
int  SetDlgItemInt(HWND hDlg,int nIDDlgItem,UINT uValue,BOOL bSigned);
int  SetDlgItemText(HWND hDlg,int nIDDlgItem,LPCTSTR lpString);
int  SetDlgItemTextA(HWND hDlg,int nIDDlgItem,LPCTSTR lpString);
int  SetDlgItemTextW(HWND hDlg,int nIDDlgItem,LPCTSTR lpString);
int  SetDoubleClickTime(UINT uInterval);
int  SetFocus(HWND hWnd);
int  SetForegroundWindow(HWND hWnd);
int  SetGestureConfig(HWND hwnd,DWORD dwReserved,UINT cIDs,PGESTURECONFIG pGestureConfig,UINT cbSize);
int  SetKeyboardState(LPBYTE lpKeyState);
int  SetLastErrorEx(DWORD dwErrCode,DWORD dwType);
int  SetLayeredWindowAttributes(HWND hWnd,COLORREF crKey,BYTE bAlpha,DWORD dwFlags);
int  SetMenu(HWND hWnd,HMENU hMenu);
int  SetMenuContextHelpId(HMENU hmenu,DWORD dwContextHelpId);
int  SetMenuDefaultItem(HMENU hMenu,UINT uItem,UINT fByPos);
int  SetMenuInfo(HMENU hmenu,LPCMENUINFO lpcmi);
int  SetMenuItemBitmaps(HMENU hMenu,UINT uPosition,UINT uFlags,HBITMAP hBitmapUnchecked,HBITMAP hBitmapChecked);
int  SetMenuItemInfo(HMENU hMenu,UINT uItem,BOOL fByPosition,LPMENUITEMINFO lpmii);
int  SetMenuItemInfoA(HMENU hMenu,UINT uItem,BOOL fByPosition,LPMENUITEMINFO lpmii);
int  SetMenuItemInfoW(HMENU hMenu,UINT uItem,BOOL fByPosition,LPMENUITEMINFO lpmii);
int  SetMessageExtraInfo(LPARAM lParam);
int  SetParent(HWND hWndChild,HWND hWndNewParent);
int  SetPhysicalCursorPos(int X,int Y);
int  SetProcessDPIAware();
int  SetProcessDefaultLayout(DWORD dwDefaultLayout);
int  SetProcessWindowStation(HWINSTA hWinSta);
int  SetProp(HWND hWnd,LPCTSTR lpString,HANDLE hData);
int  SetPropA(HWND hWnd,LPCTSTR lpString,HANDLE hData);
int  SetPropW(HWND hWnd,LPCTSTR lpString,HANDLE hData);
int  SetRect(LPRECT lprc,int xLeft,int yTop,int xRight,int yBottom);
int  SetRectEmpty(LPRECT lprc);
int  SetScrollInfo(HWND hWnd,int fnBar,LPCSCROLLINFO lpsi,BOOL fRedraw);
int  SetScrollPos(HWND hWnd,int nBar,int nPos,BOOL bRedraw);
int  SetScrollRange(HWND hWnd,int nBar,int nMinPos,int nMaxPos,BOOL bRedraw);
int  SetSysColors(int cElements,const INT* lpaElements,const COLORREF* lpaRgbValues);
int  SetSystemCursor(HCURSOR hcur,DWORD id);
int  SetThreadDesktop(HDESK hDesktop);
int  SetTimer(HWND hWnd,UINT_PTR nIDEvent,UINT uElapse,TIMERPROC lpTimerFunc);
int  SetUserObjectInformation(HANDLE hObj,int nIndex,PVOID pvInfo,DWORD nLength);
int  SetUserObjectSecurity(HANDLE hObj,PSECURITY_INFORMATION pSIRequested,PSECURITY_DESCRIPTOR pSID);
int  SetWinEventHook(UINT eventMin,UINT eventMax,HMODULE hmodWinEventProc,WINEVENTPROC lpfnWinEventProc,DWORD idProcess,DWORD idThread,DWORD dwflags);
int  SetWindowContextHelpId(HWND hWnd,DWORD dwContextHelpId);
int  SetWindowDisplayAffinity(HWND hWnd,DWORD dwAffinity);
int  SetWindowLong(HWND hWnd,int nIndex,LONG dwNewLong);
int  SetWindowLongA(HWND hWnd,int nIndex,LONG dwNewLong);
int  SetWindowLongW(HWND hWnd,int nIndex,LONG dwNewLong);
int  SetWindowPlacement(HWND hWnd,WINDOWPLACEMENT* lpwndpl);
int  SetWindowPos(HWND hWnd,HWND hWndInsertAfter,int X,int Y,int cx,int cy,UINT uFlags);
int  SetWindowRgn(HWND hWnd,HRGN hRgn,BOOL bRedraw);
int  SetWindowText(HWND hWnd,LPCTSTR lpString);
int  SetWindowTextA(HWND hwnd,LPCTSTR lpString);
int  SetWindowTextW(HWND hwnd,LPCTSTR lpString);
int  SetWindowsHookEx(int idHook,HOOKPROC lpfn,HINSTANCE hMod,DWORD dwThreadId);
int  SetWindowsHookExA(int idHook,HOOKPROC lpfn,HINSTANCE hMod,DWORD dwThreadId);
int  SetWindowsHookExW(int idHook,HOOKPROC lpfn,HINSTANCE hMod,DWORD dwThreadId);
int  ShowCaret(HWND hWnd);
int  ShowCursor(BOOL bShow);
int  ShowOwnedPopups(HWND hWnd,BOOL fShow);
int  ShowScrollBar(HWND hWnd,int wBar,BOOL bShow);
int  ShowWindow(HWND hWnd,int nCmdShow);
int  ShowWindowAsync(HWND hWnd,int nCmdShow);
int  ShutdownBlockReasonCreate(HWND hWnd,LPCWSTR pwszReason);
int  ShutdownBlockReasonDestroy(HWND hWnd);
int  ShutdownBlockReasonQuery(HWND hWnd,LPWSTR pwszBuff,DWORD* pcchBuff);
int  SoundSentry();
int  SubtractRect(LPRECT lprcDst,const RECT* lprcSrc1,const RECT* lprcSrc2);
int  SwapMouseButton(BOOL fSwap);
int  SwitchDesktop(HDESK hDesktop);
int  SwitchToThisWindow(HWND hWnd,BOOL fAltTab);
int  SystemParametersInfo(long uiAction,UINT uiParam,PVOID pvParam,long fWinIni);
int  SystemParametersInfoA(long uiAction,UINT uiParam,PVOID pvParam,long fWinIni);
int  SystemParametersInfoW(long uiAction,UINT uiParam,PVOID pvParam,long fWinIni);
int  TabbedTextOut(HDC hDC,int X,int Y,LPCTSTR lpString,int nCount,int nTabPositions,const LPINT lpnTabStopPositions,int nTabOrigin);
int  TabbedTextOutA(HDC hDC,int X,int Y,LPCTSTR lpString,int nCount,int nTabPositions,const LPINT lpnTabStopPositions,int nTabOrigin);
int  TabbedTextOutW(HDC hDC,int X,int Y,LPCTSTR lpString,int nCount,int nTabPositions,const LPINT lpnTabStopPositions,int nTabOrigin);
int  TileWindows(HWND hwndParent,UINT wHow,RECT* lpRect,UINT cKids,const HWND* lpKids);
int  ToAscii(UINT uVirtKey,UINT uScanCode,PBYTE lpKeyState,LPWORD lpChar,UINT uFlags);
int  ToAsciiEx(UINT uVirtKey,UINT uScanCode,PBYTE lpKeyState,LPWORD lpChar,UINT uFlags,HKL dwhkl);
int  ToUnicode(UINT wVirtKey,UINT wScanCode,const PBYTE lpKeyState,LPWSTR pwszBuff,int cchBuff,UINT wFlags);
int  ToUnicodeEx(UINT wVirtKey,UINT wScanCode,const PBYTE lpKeyState,LPWSTR pwszBuff,int cchBuff,UINT wFlags,HKL dwhkl);
int  TrackMouseEvent(LPTRACKMOUSEEVENT pTrackMouseEvent);
int  TrackPopupMenu(HMENU hMenu,UINT uFlags,int X,int Y,int nReserved,HWND hWnd,CONST RECT* prcRect);
int  TrackPopupMenuEx(HMENU hmenu,UINT fuFlags,int x,int Y,HWND hWnd,LPTPMPARAMS lptpm);
int  TranslateAcceleratorA(HWND hWnd,HACCEL hAccTable,LPMSG lpMsg);
int  TranslateAcceleratorW(HWND hWnd,HACCEL hAccTable,LPMSG lpMsg);
int  TranslateAccelerator(HWND hWnd,HACCEL hAccTable,LPMSG lpMsg);
int  TranslateMDISysAccel(HWND hWndClient,LPMSG lpMsg);
int  TranslateMessage(const MSG* lpMsg);
int  UnhookWinEvent(HWINEVENTHOOK hWinEventHook);
int  UnhookWindowsHookEx(HHOOK hhk);
int  UnionRect(LPRECT lprcDst,const RECT* lprcSrc1,const RECT* lprcSrc2);
int  UnloadKeyboardLayout(HKL hkl);
int  UnpackDDElParam(UINT msg,LPARAM lParam,PUINT_PTR puiLo,PUINT_PTR puiHi);
int  UnregisterClass(LPCTSTR lpClassName,HINSTANCE hInstance);
int  UnregisterClassA(DWORD lpClassName,DWORD hInstance);
int  UnregisterClassA(LPCTSTR lpClassName,HINSTANCE hInstance);
int  UnregisterClassW(LPCTSTR lpClassName,HINSTANCE hInstance);
int  UnregisterDeviceNotification(HDEVNOTIFY Handle);
int  UnregisterHotKey(HWND hWnd,int id);
int  UnregisterPowerSettingNotification(HPOWERNOTIFY Handle);
int  UnregisterTouchWindow(HWND hWnd);
int  UpdateLayeredWindow(HWND hwnd,HDC hdcDst,POINT* pptDst,SIZE* psize,HDC hdcSrc,POINT* pptSrc,COLORREF crKey,BLENDFUNCTION* pblend,DWORD dwFlags);
int  UpdateLayeredWindowIndirect(HWND hwnd,const UPDATELAYEREDWINDOWINFO* pULWInfo);
int  UpdateWindow(HWND hWnd);
int  UserHandleGrantAccess(HANDLE hUserHandle,HANDLE hJob,BOOL bGrant);
int  ValidateRect(HWND hWnd,const RECT* lpRect);
int  ValidateRgn(HWND hWnd,HRGN hRgn);
int  VkKeyScan(TCHAR ch);
int  VkKeyScanA(TCHAR ch);
int  VkKeyScanEx(TCHAR ch,HKL dwhkl);
int  VkKeyScanW(TCHAR ch);
int  WaitForInputIdle(HANDLE hProcess,DWORD dwMilliseconds);
int  WaitMessage();
int  WinHelp(HWND hWndMain,LPCTSTR lpszHelp,UINT uCommand,ULONG_PTR dwData);
int  WinHelpA(HWND hWndMain,LPCTSTR lpszHelp,UINT uCommand,ULONG_PTR wData);
int  WinHelpW(HWND hWndMain,LPCTSTR lpszHelp,UINT uCommand,ULONG_PTR wData);
int  WindowFromDC(HDC hDC);
int  WindowFromPhysicalPoint(POINT Point);
int  WindowFromPoint(POINT Point);
int  keybd_event(BYTE bVk,BYTE bScan,DWORD dwFlags,ULONG_PTR dwExtraInfo);
int  mouse_event(DWORD dwFlags,DWORD dx,DWORD dy,DWORD dwData,ULONG_PTR dwExtraInfo);
int  toascii(DWORD char);