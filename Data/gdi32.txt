int  AbortDoc(HDC hDC);
int  AbortPath(HDC hDC);
int  AddFontMemResourceEx(PVOID pbFont,DWORD cbFont,PVOID pdv,DWORD* pcFonts);
int  AddFontResource(LPCTSTR lpszFilename);
int  AddFontResourceA(LPCTSTR lpszFilename);
int  AddFontResourceEx(LPCTSTR lpszFilename,DWORD fl,PVOID pdv);
int  AddFontResourceW(LPCTSTR lpszFilename);
int  AngleArc(HDC hDC,int x,int y,DWORD dwRadius,FLOAT eStartAngle,FLOAT eSweepAngle);
int  AnimatePalette(HPALETTE hpal,UINT iStartindex,UINT cEntries,const PALETTEENTRY* ppe);
int  Arc(HDC hDC,int nLeftRect,int nTopRect,int nTopRect,int nBottomRect,int nXStartArc,int nYStartArc,int nXEndArc,int nYEndArc);
int  ArcTo(HDC hdc,int nLeftRect,int nTopRect,int nRightRect,int nBottomRect,int nXRadial1,int nYRadial1,int nXRadial2,int nYRadial2);
int  BeginPath(HDC hDC);
int  BitBlt(HDC hDCDest,int nXDest,int nYDest,int nWidth,int nHeight,HDC hdcSrc,int nXSrc,int nYSrc,DWORD dwRop);
int  CancelDC(HDC hDC);
int  ChoosePixelFormat(HDC hdc,const PIXELFORMATDESCRIPTOR* ppfd);
int  Chord(HDC hDC,int nLeftRect,int nTopRect,int nRightRect,int nBottomRect,int nXRadial1,int nYRadial1,int nXRadial2,int nYRadial2);
int  CloseEnhMetaFile(HDC hDC);
int  CloseFigure(HDC hDC);
int  CloseMetaFile(HDC hDC);
int  CombineRgn(HRGN hrgnDest,HRGN hrgnSrc1,HRGN hrgnSrc2,DWORD fnCombineMode);
int  CombineTransform(LPXFORM lpxformResult,const XFORM* lpxform1,const XFORM* lpxform2);
int  CopyEnhMetaFile(HENHMETAFILE hemfSrc,LPCTSTR lpszFile);
int  CopyEnhMetaFileA(HENHMETAFILE hemfSrc,LPCTSTR lpszFile);
int  CopyEnhMetaFileW(HENHMETAFILE hemfSrc,LPCTSTR lpszFile);
int  CopyMetaFile(HMETAFILE hmfSrc,LPCTSTR lpszFile);
int  CopyMetaFileA(HMETAFILE hmfSrc,LPCTSTR lpszFile);
int  CopyMetaFileW(HMETAFILE hmfSrc,LPCTSTR lpszFile);
int  CreateBitmap(int nWidth,int nHeight,UINT cPlanes,UINT cBitsPerPel,const VOID* lpvBits);
int  CreateBitmapIndirect(const BITMAP* lpbm);
int  CreateBrushIndirect(const LOGBRUSH* lplb);
int  CreateCompatibleBitmap(HDC hDC,int nWidth,int nHeight);
int  CreateCompatibleDC(HDC hDC);
int  CreateDC(LPCTSTR lpszDriver,LPCTSTR lpszDevice,LPCTSTR lpszOutput,const DEVMODE* lpInitData);
int  CreateDCA(LPCTSTR lpszDriver,LPCTSTR lpszDevice,LPCTSTR lpszOutput,const DEVMODE* lpInitData);
int  CreateDCW(LPCTSTR lpszDriver,LPCTSTR lpszDevice,LPCTSTR lpszOutput,const DEVMODE* lpInitData);
int  CreateDIBPatternBrush(HGLOBAL hglbDIBPacked,UINT fuColorSpec);
int  CreateDIBPatternBrushPt(const VOID* lpPackedDIB,DWORD iUsage);
int  CreateDIBSection(HDC hDC,const BITMAPINFO* pbmi,DWORD iUsage,VOID** ppvBits,HANDLE hSection,DWORD dwOffset);
int  CreateDIBitmap(HDC hDC,const BITMAPINFOHEADER* lpbmih,DWORD lpbmih,const VOID* lpbInit,const BITMAPINFO* lpbmi,DWORD fuUsage);
int  CreateDiscardableBitmap(HDC hdc,int nWidth,int nHeight);
int  CreateEllipticRgn(int nLeftRect,int nTopRect,int nRightRect,int nBottomRect);
int  CreateEllipticRgnIndirect(const RECT* lprc);
int  CreateEnhMetaFile(HDC hdcRef,LPCTSTR lpFilename,const RECT* lpRect,LPCTSTR lpDescription);
int  CreateEnhMetaFileA(HDC hDC,LPCTSTR lpFilename,const RECT* lpRect,LPCTSTR lpDescription);
int  CreateEnhMetaFileW(HDC hDC,LPCTSTR lpFilename,const RECT* lpRect,LPCTSTR lpDescription);
int  CreateFont(int nHeight,int nWidth,int nEscapement,int nOrientation,DWORD fnWeight,DWORD fdwItalic,DWORD fdwUnderline,DWORD fdwStrikeOut,DWORD fdwCharSet,DWORD fdwOutputPrecision,DWORD fdwClipPrecision,DWORD fdwQuality,DWORD fdwPitchAndFamily,LPCTSTR lpszFace);
int  CreateFontA(int nHeight,int nWidth,int nEscapement,int nOrientation,DWORD fnWeight,DWORD fdwItalic,DWORD fdwUnderline,DWORD fdwStrikeOut,DWORD fdwCharSet,DWORD fdwOutputPrecision,DWORD fdwClipPrecision,DWORD fdwQuality,DWORD fdwPitchAndFamily,LPCTSTR lpszFace);
int  CreateFontIndirect(const LOGFONT* lplf);
int  CreateFontIndirectA(const LOGFONT* lplf);
int  CreateFontIndirectEx(const ENUMLOGFONTEXDV* penumlfex);
int  CreateFontIndirectW(const LOGFONT* lplf);
int  CreateFontW(int nHeight,int nWidth,int nEscapement,int nOrientation,DWORD fnWeight,DWORD fdwItalic,DWORD fdwUnderline,DWORD fdwStrikeOut,DWORD fdwCharSet,DWORD fdwOutputPrecision,DWORD fdwClipPrecision,DWORD fdwQuality,DWORD fdwPitchAndFamily,LPCTSTR lpszFace);
int  CreateHalftonePalette(HDC hDC);
int  CreateHatchBrush(DWORD fnStyle,COLORREF clrref);
int  CreateIC(LPCTSTR lpszDriver,LPCTSTR lpszDevice,LPCTSTR lpszOutput,const DEVMODE* lpdvmInit);
int  CreateICA(LPCTSTR lpszDriver,LPCTSTR lpszDevice,LPCTSTR lpszOutput,const DEVMODE* lpdvmInit);
int  CreateMetaFile(LPCTSTR lpszFile);
int  CreateMetaFileA(LPCTSTR lpszFile);
int  CreateMetaFileW(LPCTSTR lpszFile);
int  CreatePalette(const LOGPALETTE* lplgpl);
int  CreatePatternBrush(HBITMAP hbmp);
int  CreatePolyPolygonRgn(const POINT* lppt,const INT* lpPolyCounts,int nCount,DWORD fnPolyFillMode);
int  CreatePolygonRgn(const POINT* lppt,int cPoints,DWORD fnPolyFillMode);
int  CreateRectRgn(int nLeftRect,int nTopRect,int nRightRect,int nBottomRect);
int  CreateRectRgnIndirect(const RECT* lprc);
int  CreateRoundRectRgn(int nLeftRect,int nTopRect,int nRightRect,int nBottomRect,int nWidthEllipse,int nHeightEllipse);
int  CreateScalableFontResource(DWORD fdwHidden,LPCTSTR lpszFontRes,LPCTSTR lpszFontFile,LPCTSTR lpszCurrentPath);
int  CreateScalableFontResourceA(DWORD fdwHidden,LPCTSTR lpszFontRes,LPCTSTR lpszFontFile,LPCTSTR lpszCurrentPath);
int  CreateScalableFontResourceW(DWORD fdwHidden,LPCTSTR lpszFontRes,LPCTSTR lpszFontFile,LPCTSTR lpszCurrentPath);
int  CreateSolidBrush(COLORREF crColor);
int  DPtoLP(HDC hDC,LPPOINT lpPoints,int nCount);
int  DeleteDC(HDC hDC);
int  DeleteEnhMetaFile(HENHMETAFILE hemf);
int  DeleteMetaFile(HMETAFILE hmf);
int  DeleteObject(HGDIOBJ hObject);
int  DescribePixelFormat(HDC hdc,int iPixelFormat,UINT nBytes,LPPIXELFORMATDESCRIPTOR ppfd);
int  DrawEscape(HDC hDC,int nEscape,int cbInput,LPCSTR lpszInData);
int  Ellipse(HDC hdc,int nLeftRect,int nTopRect,int nRightRect,int nBottomRect);
int  EndDoc(HDC hDC);
int  EndPage(HDC hDC);
int  EndPath(HDC hDC);
int  EnumEnhMetaFile(HDC hDC,HENHMETAFILE hemf,ENHMFENUMPROC lpEnhMetaFunc,LPVOID lpData,const RECT* lpRect);
int  EnumFontFamilies(HDC hdc,LPCTSTR lpszFamily,FONTENUMPROC lpEnumFontFamProc,LPARAM lParam);
int  EnumFontFamiliesA(HDC hDC,LPCTSTR lpszFamily,FONTENUMPROC lpEnumFontFamProc,LPARAM lParam);
int  EnumFontFamiliesEx(HDC hdc,LPLOGFONT lpLogfont,FONTENUMPROC lpEnumFontFamExProc,LPARAM lParam,DWORD dwFlags);
int  EnumFontFamiliesExA(HDC hDC,LPLOGFONT lpLogfont,FONTENUMPROC lpEnumFontFamExProc,LPARAM lParam,DWORD dwFlags);
int  EnumFontFamiliesExW(HDC hDC,LPLOGFONT lpLogfont,FONTENUMPROC lpEnumFontFamExProc,LPARAM lParam,DWORD dwFlags);
int  EnumFontFamiliesW(HDC hDC,LPCTSTR lpszFamily,FONTENUMPROC lpEnumFontFamProc,LPARAM lParam);
int  EnumFonts(HDC hdc,LPCTSTR lpFaceName,FONTENUMPROC lpFontFunc,LPARAM lParam);
int  EnumFontsA(HDC hDC,LPCTSTR lpFaceName,FONTENUMPROC lpFontFunc,LPARAM lParam);
int  EnumFontsW(HDC hDC,LPCTSTR lpFaceName,FONTENUMPROC lpFontFunc,LPARAM lParam);
int  EnumMetaFile(HDC hDC,HMETAFILE hmf,MFENUMPROC lpMetaFunc,LPARAM lParam);
int  EnumObjects(HDC hDC,int nObjectType,GOBJENUMPROC lpObjectFunc,LPARAM lParam);
int  EqualRgn(HRGN hSrcRgn1,HRGN hSrcRgn2);
int  Escape(HDC hDC,DWORD nEscape,int cbInput,LPCSTR lpvInData,LPVOID lpvOutData );
int  ExcludeClipRect(HDC hDC,int nLeftRect,int nTopRect,int nRightRect,int nBottomRect);
int  ExtCreateRegion(const XFORM* lpXform,DWORD nCount,const RGNDATA* lpRgnData);
int  ExtEscape(HDC hdc,int nEscape,int cbInput,LPCSTR lpszInData,int cbOutput,LPSTR lpszOutData);
int  ExtFloodFill(HDC hDC,int nXStart,int nYStart,COLORREF crColor,UINT fuFillType);
int  ExtSelectClipRgn(HDC hDC,HRGN hrgn,DWORD fnMode);
int  ExtTextOut(HDC hdc,int X,int Y,DWORD fuOptions,const RECT* lprc,LPCTSTR lpString,UINT cbCount,const INT* lpDx);
int  ExtTextOutA(HDC hDC,int X,int Y,DWORD fuOptions,const RECT* lprc,LPCTSTR lpString,UINT cbCount,const INT* lpDx);
int  ExtTextOutW(HDC hDC,int X,int Y,DWORD fuOptions,const RECT* lprc,LPCTSTR lpString,UINT cbCount,const INT* lpDx);
int  FillPath(HDC hDC);
int  FillRgn(HDC hDc,HRGN hrgn,HBRUSH hbr);
int  FlattenPath(HDC hDC);
int  FloodFill(HDC hDc,int nXStart,int nYStart,COLORREF crFill);
int  FrameRgn(HDC hDc,HRGN hrgn,HBRUSH hbr,int nWidth,int nHeight);
int  GdiComment(HDC hDC,UINT cbSize,const BYTE* lpData);
int  GdiFlush();
int  GdiGetBatchLimit();
int  GdiSetBatchLimit(DWORD dwLimit);
int  GetArcDirection(HDC hDC);
int  GetAspectRatioFilterEx(HDC hDC);
int  GetBitmapBits(HBITMAP hBitmap,LONG dwCount,LPVOID lpBits);
int  GetBitmapDimensionEx(HBITMAP hBitmap,LPSIZE lpDimension);
int  GetBkColor(HDC hDC);
int  GetBkMode(HDC hDC);
int  GetBoundsRect(HDC hDC,LPRECT lprcBounds,DWORD flags);
int  GetBrushOrgEx(HDC hDC,LPPOINT lppt);
int  GetCharABCWidths(HDC hdc,UINT uFirstChar,UINT uLastChar,LPABC lpabc);
int  GetCharABCWidthsA(HDC hDC,UINT uFirstChar,UINT uLastChar,LPABC lpabc);
int  GetCharABCWidthsFloat(HDC hdc,UINT iFirstChar,UINT iLastChar,LPABCFLOAT lpABCF);
int  GetCharABCWidthsFloatA(HDC hDC,UINT iFirstChar,UINT iLastChar,LPABCFLOAT lpABCF);
int  GetCharABCWidthsFloatW(HDC hDC,UINT iFirstChar,UINT iLastChar,LPABCFLOAT lpABCF);
int  GetCharABCWidthsI(HDC hdc,UINT giFirst,UINT cgi,LPWORD pgi,LPABC lpabc);
int  GetCharABCWidthsW(HDC hDC,UINT uFirstChar,UINT uLastChar,LPABC lpabc);
int  GetCharWidth(HDC hdc,UINT iFirstChar,UINT iLastChar,LPINT lpBuffer);
int  GetCharWidth32(HDC hdc,UINT iFirstChar,UINT iLastChar,LPINT lpBuffer);
int  GetCharWidthA(HDC hDC,UINT iFirstChar,UINT iLastChar,LPINT lpStockBuffer);
int  GetCharWidthFloat(HDC hdc,UINT iFirstChar,UINT iLastChar,PFLOAT pxBuffer);
int  GetCharWidthI(HDC hdc,UINT giFirst,UINT cgi,LPWORD pgi,LPINT lpBuffer);
int  GetCharWidthW(HDC hDC,UINT iFirstChar,UINT iLastChar,LPINT lpStockBuffer);
int  GetCharacterPlacement(HDC hdc,LPCTSTR lpString,int nCount,int nMaxExtent,LPGCP_RESULTS lpResults,DWORD dwFlags);
int  GetCharacterPlacementA(HDC hDC,LPCTSTR lpString,int nCount,int nMaxExtent,LPGCP_RESULTS lpResults,DWORD dwFlags);
int  GetCharacterPlacementW(HDC hDC,LPCTSTR lpString,int nCount,int nMaxExtent,LPGCP_RESULTS lpResults,DWORD dwFlags);
int  GetClipBox(HDC hDC,LPRECT lprc);
int  GetClipRgn(HDC hdc,HRGN hrgn);
int  GetColorAdjustment(HDC hdc,LPCOLORADJUSTMENT lpca);
int  GetCurrentObject(HDC hDC,DWORD uObjectType);
int  GetCurrentPositionEx(HDC hDC,LPPOINT lpPoint);
int  GetDCBrushColor(HDC hdc);
int  GetDCOrgEx(HDC hDC,LPPOINT lpPoint);
int  GetDCPenColor(HDC hdc);
int  GetDIBColorTable(HDC hDC,UINT uStartIndex,UINT cEntries,RGBQUAD* pColors);
int  GetDIBits(HDC hDC,HBITMAP hbmp,UINT uStartScan,UINT cScanLines,LPVOID lpvBits,LPBITMAPINFO lpbi,DWORD uUsage);
int  GetDeviceCaps(HDC hDC,DWORD nIndex);
int  GetEnhMetaFile(LPCTSTR lpszMetaFile);
int  GetEnhMetaFileA(LPCTSTR lpszMetaFile);
int  GetEnhMetaFileBits(HENHMETAFILE hemf,UINT cbBuffer,LPBYTE lpbBuffer);
int  GetEnhMetaFileDescription(HENHMETAFILE hemf,UINT cchBuffer,LPTSTR lpszDescription);
int  GetEnhMetaFileDescriptionA(HENHMETAFILE hemf,UINT cchBuffer,LPTSTR lpszDescription);
int  GetEnhMetaFileDescriptionW(HENHMETAFILE hemf,UINT cchBuffer,LPTSTR lpszDescription);
int  GetEnhMetaFileHeader(HENHMETAFILE hemf,UINT cbBuffer,LPENHMETAHEADER lpemh);
int  GetEnhMetaFilePaletteEntries(HENHMETAFILE hemf,UINT cEntries,LPPALETTEENTRY lppe);
int  GetEnhMetaFilePixelFormat(HENHMETAFILE hemf,DWORD cbBuffer,const PIXELFORMATDESCRIPTOR* ppfd);
int  GetEnhMetaFileW(LPCTSTR lpszMetaFile);
int  GetFontData(HDC hDC,DWORD dwTable,DWORD dwOffset,LPVOID lpvBuffer,DWORD cbData);
int  GetFontLanguageInfo(HDC hDC);
int  GetFontUnicodeRanges(HDC hdc,LPGLYPHSET lpgs);
int  GetGlyphIndices(HDC hdc,LPCTSTR lpstr,int c,LPWORD pgi,DWORD fl);
int  GetGlyphOutline(HDC hDC,UINT uChar,DWORD uFormat,LPGLYPHMETRICS lpgm,DWORD cbBuffer,LPVOID lpvBuffer,const MAT2* lpmat2);
int  GetGlyphOutlineW(HDC hDC,UINT uChar,DWORD uFormat,LPGLYPHMETRICS lpgm,DWORD cbBuffer,LPVOID lpvBuffer,const MAT2* lpmat2);
int  GetGraphicsMode(HDC hDC);
int  GetKerningPairs(HDC hDC,DWORD nNumPairs,LPKERNINGPAIR lpkrnpair);
int  GetKerningPairsW(HDC hDC,DWORD nNumPairs,LPKERNINGPAIR lpkrnpair);
int  GetLayout(HDC hdc);
int  GetMapMode(HDC hDC);
int  GetMetaFileBitsEx(HMETAFILE hmf,UINT nSize,LPVOID lpvData);
int  GetMetaRgn(HDC hdc,HRGN hrgn);
int  GetMiterLimit(HDC hDC,PFLOAT peLimit);
int  GetNearestColor(HDC hDC,COLORREF crColor);
int  GetNearestPaletteIndex(HPALETTE hpal,COLORREF crColor);
int  GetObject(HGDIOBJ hgdiobj,int cbBuffer,LPVOID lpvObject);
int  GetObjectA(HGDIOBJ hgdiobj,int cbBuffer,LPVOID lpvObject);
int  GetObjectType(HGDIOBJ hgdiobj);
int  GetObjectW(HGDIOBJ hgdiobj,int cbBuffer,LPVOID lpvObject);
int  GetOutlineTextMetrics(HDC hdc,UINT cbData,LPOUTLINETEXTMETRIC lpOTM);
int  GetOutlineTextMetricsA(HDC hDC,UINT cbData,LPOUTLINETEXTMETRIC lpOTM);
int  GetOutlineTextMetricsW(HDC hDC,UINT cbData,LPOUTLINETEXTMETRIC lpOTM);
int  GetPaletteEntries(HPALETTE hpal,UINT iStartIndex,UINT nEntries,LPPALETTEENTRY lppe);
int  GetPath(HDC hDC,LPPOINT lpPoints,LPBYTE lpTypes,int nSize);
int  GetPixel(HDC hDC,int XPos,int YPos);
int  GetPixelFormat(HDC hdc);
int  GetPolyFillMode(HDC hDC);
int  GetROP2(HDC hDC);
int  GetRandomRgn(HDC hdc,HRGN hrgn,DWORD iNum);
int  GetRasterizerCaps(LPRASTERIZER_STATUS lprs,UINT cb);
int  GetRegionData(HRGN hRgn,DWORD dwCount,LPRGNDATA lpRgnData);
int  GetRgnBox(HRGN hrgn,LPRECT lprc);
int  GetStockObject(int fnIndex);
int  GetStretchBltMode(HDC hDC);
int  GetSystemPaletteEntries(HDC hDC,UINT wStartIndex,UINT wNumEntries,LPPALETTEENTRY lpPaletteEntries);
int  GetSystemPaletteUse(HDC hdc);
int  GetTextAlign(HDC hDC);
int  GetTextCharacterExtra(HDC hDC);
int  GetTextCharset(HDC hDC);
int  GetTextCharsetInfo(HDC hDC);
int  GetTextColor(HDC hDC);
int  GetTextExtentExPoint(HDC hdc,LPCTSTR lpszStr,int cchString,int nMaxExtent,LPINT lpnFit,LPINT alpDx,LPSIZE lpSize);
int  GetTextExtentExPointA(HDC hDC,LPCTSTR lpszStr,int cchString,int nMaxExtent,LPINT lpnFit,LPINT alpDx,LPSIZE lpSize);
int  GetTextExtentExPointI(HDC hdc,LPWORD pgiIn,int cgi,int nMaxExtent,LPINT lpnFit,LPINT alpDx,LPSIZE lpSize);
int  GetTextExtentExPointW(HDC hDC,LPCTSTR lpszStr,int cchString,int nMaxExtent,LPINT lpnFit,LPINT alpDx,LPSIZE lpSize);
int  GetTextExtentPoint(HDC hdc,LPCTSTR lpString,int cbString,LPSIZE lpSize);
int  GetTextExtentPoint32(HDC hdc,LPCTSTR lpString,int c,LPSIZE lpSize);
int  GetTextExtentPoint32A(HDC hDC,LPCTSTR lpString,int cbString,LPSIZE lpSize);
int  GetTextExtentPoint32W(HDC hdc,LPCTSTR lpString,int cbString,LPSIZE lpSize);
int  GetTextExtentPointA(HDC hDC,LPCTSTR lpString,int cbString,LPSIZE lpSize);
int  GetTextExtentPointI(HDC hdc,LPWORD pgiIn,int cgi,LPSIZE lpSize);
int  GetTextExtentPointW(HDC hDC,LPCTSTR lpString,int cbString,LPSIZE lpSize);
int  GetTextFace(HDC hdc,int nCount,LPTSTR lpFaceName);
int  GetTextFaceA(HDC hDC,int nCount,LPTSTR lpFaceName);
int  GetTextFaceW(HDC hDC,int nCount,LPTSTR lpFaceName);
int  GetTextMetrics(HDC hdc,LPTEXTMETRIC lptm);
int  GetTextMetricsA(HDC hDC,LPTEXTMETRIC lptm);
int  GetTextMetricsW(HDC hDC,LPTEXTMETRIC lptm);
int  GetViewportExtEx(HDC hDC,LPSIZE lpSize);
int  GetViewportOrgEx(HDC hDC,LPPOINT lpPoint);
int  GetWinMetaFileBits(HENHMETAFILE hemf,UINT cbBuffer,LPBYTE lpbBuffer,DWORD fnMapMode,HDC hdcRef);
int  GetWindowExtEx(HDC hWnd,LPSIZE lpSize);
int  GetWindowOrgEx(HDC hWnd,LPPOINT lpPoint);
int  GetWorldTransform(HDC hDC,LPXFORM lpXform);
int  IntersectClipRect(HDC hDC,int nLeftRect,int nTopRect,int nRightRect,int nBottomRect);
int  InvertRgn(HDC hDC,HRGN hrgn);
int  LPtoDP(HDC hDC,LPPOINT lpPoints,int nCount);
int  LineDDA(int nXStart,int nYStart,int nXEnd,int nYEnd,LINEDDAPROC lpLineFunc,LPARAM lpData);
int  LineTo(HDC hDC,int nXEnd,int nYEnd);
int  MaskBlt(HDC hdcDest,int nXDest,int nYDest,int nWidth,int nHeight,HDC hdcSrc,int nXSrc,int nYSrc,HBITMAP hbmMask,int xMask,int yMask,DWORD dwRop);
int  ModifyWorldTransform(HDC hDC,const XFORM* lpXform,DWORD iMode);
int  MoveToEx(HDC hDC,int X,int Y,LPPOINT lpPoint);
int  OffsetClipRgn(HDC hDC,int nXOffset,int nYOffset);
int  OffsetRgn(HRGN hrgn,int nXOffset,int nYOffset);
int  OffsetViewportOrgEx(HDC hDC,int nXOffset,int nYOffset,LPPOINT lpPoint);
int  OffsetWindowOrgEx(HDC hDC,int nXOffset,int nYOffset,LPPOINT lpPoint);
int  PaintRgn(HDC hDC,HRGN hrgn);
int  PatBlt(HDC hDC,int nXLeft,int nYLeft,int nWidth,int nHeight,DWORD dwRop);
int  PathToRegion(HDC hDC);
int  Pie(HDC hDC,int nLeftRect,int nTopRect,int nRightRect,int nBottomRect,int nXRadial1,int nYRadial1,int nXRadial2,int nYRadial2);
int  PlayEnhMetaFile(HDC hDC,HENHMETAFILE hemf,const RECT* lpRect);
int  PlayEnhMetaFileRecord(HDC hDC,LPHANDLETABLE lpHandletable,const ENHMETARECORD* lpEnhMetaRecord,UINT nHandles);
int  PlayMetaFile(HDC hDC,HMETAFILE hmf);
int  PlayMetaFileRecord(HDC hDC,LPHANDLETABLE lpHandletable,LPMETARECORD lpMetaRecord,UINT nHandles);
int  PlgBlt(HDC hdcDest,const POINT* lpPoint,HDC hdcSrc,int nXSrc,int nYSrc,int nWidth,int nHeight,HBITMAP hbmMask,int xMask,int yMask);
int  PolyBezier(HDC hDC,const POINT* lppt,DWORD lppt);
int  PolyBezierTo(HDC hdc,const POINT* lppt,DWORD cCount);
int  PolyDraw(HDC hDC,const POINT* lppt,const BYTE* lpbTypes,int cCount);
int  PolyPolygon(HDC hDC,const POINT* lpPoints,const INT* lpPolyCounts,int nCount);
int  PolyPolyline(HDC hDC,const POINT* lppt,const DWORD* lpdwPolyPoints,DWORD cCount);
int  PolyTextOut(HDC hdc,const POLYTEXT* pptxt,int cStrings);
int  PolyTextOutA(HDC hDC,const POLYTEXT* pptxt,int cStrings);
int  PolyTextOutW(HDC hDC,const POLYTEXT* pptxt,int cStrings);
int  Polygon(HDC hDC,const POINT* lpPoints,int nCount);
int  Polyline(HDC hDC,const POINT* lppt,int cPoints);
int  PolylineTo(HDC hdc,const POINT* lppt,DWORD cCount);
int  PtInRegion(HRGN hrgn,int X,int Y);
int  PtVisible(HDC hDC,int X,int Y);
int  RealizePalette(DWORD hDC);
int  RealizePalette(HDC hDC);
int  RectInRegion(HRGN hrgn,const RECT* lprc);
int  RectVisible(HDC hDC,const RECT* lprc);
int  Rectangle(HDC hDC,int nLeftRect,int nTopRect,int nRightRect,int nBottomRect);
int  RemoveFontMemResourceEx(HANDLE fh);
int  RemoveFontResource(LPCTSTR lpFileName);
int  RemoveFontResourceA(LPCTSTR lpFileName);
int  RemoveFontResourceEx(LPCTSTR lpFileName,DWORD fl,PVOID pdv);
int  RemoveFontResourceW(LPCTSTR lpFileName);
int  ResetDC(HDC hdc,const DEVMODE* lpInitData);
int  ResetDCA(HDC hDc,const DEVMODE* lpInitData);
int  ResetDCW(HDC hDc,const DEVMODE* lpInitData);
int  ResizePalette(HPALETTE hpal,UINT nEntries);
int  RestoreDC(HDC hDC,int nSavedDC);
int  RoundRect(HDC hDC,int nLeftRect,int nTopRect,int nRightRect,int nBottomRect,int nWidth,int nHeight);
int  SaveDC(HDC hDC);
int  ScaleViewportExtEx(HDC hDC,int Xnum,int Xdenom,int Ynum,int Ydenom,LPSIZE lpSize);
int  ScaleWindowExtEx(HDC hDC,int Xnum,int Xdenom,int Ynum,int Ydenom,LPSIZE lpSize);
int  SelectClipPath(HDC hDC,int iMode);
int  SelectClipRgn(HDC hDC,HRGN hrgn);
int  SelectObject(HDC hDC,HGDIOBJ hObjec);
int  SelectPalette(HDC hDC,HPALETTE hpal,BOOL bForceBackground);
int  SetAbortProc(HDC hDC,ABORTPROC lpAbortProc);
int  SetArcDirection(HDC hDC,int ArcDirection);
int  SetBitmapBits(HBITMAP hbmp,DWORD cBytes,const VOID* lpBits);
int  SetBitmapDimensionEx(HBITMAP hBitmap,int nWidth,int nHeight,LPSIZE lpSize);
int  SetBkColor(HDC hDC,COLORREF crColor);
int  SetBkMode(HDC hDC,DWORD iBkMode);
int  SetBoundsRect(HDC hDC,const RECT* lprcBounds,DWORD flags);
int  SetBrushOrgEx(HDC hDC,int nXOrg,int nYOrg,LPPOINT lppt);
int  SetColorAdjustment(HDC hdc,const COLORADJUSTMENT* lpca);
int  SetDCBrushColor(HDC hdc,COLORREF crColor);
int  SetDCPenColor(HDC hdc,COLORREF crColor);
int  SetDIBColorTable(HDC hDC,UINT un1,UINT un2,const RGBQUAD* pcRGBQuad);
int  SetDIBits(HDC hDC,HBITMAP hbmp,UINT uStartScan,UINT cScanLines,const VOID* lpvBits,const BITMAPINFO* lpbmi,DWORD fuColorUse);
int  SetDIBitsToDevice(HDC hDC,int XDest,int YDest,DWORD dwWidth,DWORD dwHeight,int XSrc,int YSrc,UINT uStartScan,UINT cScanLines,const VOID* lpvBits,const BITMAPINFO* lpbmi,DWORD fuColorUse);
int  SetEnhMetaFileBits(UINT cbBuffer,const BYTE* lpData);
int  SetGraphicsMode(HDC hDC,DWORD iMode);
int  SetLayout(HDC hdc,DWORD dwLayout);
int  SetMapMode(HDC hDC,DWORD fnMapMode);
int  SetMapperFlags(HDC hDC,DWORD dwFlag);
int  SetMetaFileBitsEx(UINT nSize,const BYTE* lpData);
int  SetMetaRgn(HDC hdc);
int  SetMiterLimit(HDC hDC,FLOAT eNewLimit,PFLOAT peOldLimit);
int  SetPaletteEntries(HPALETTE hpal,UINT iStart,UINT cEntries,const PALETTEENTRY* lppe);
int  SetPixel(HDC hDC,int X,int Y,COLORREF crColor);
int  SetPixelFormat(HDC hdc,int iPixelFormat,const PIXELFORMATDESCRIPTOR* ppfd);
int  SetPixelV(HDC hDC,int X,int Y,COLORREF crColor);
int  SetPolyFillMode(HDC hDC,DWORD iPolyFillMode);
int  SetROP2(HDC hDC,DWORD fnDrawMode2);
int  SetRectRgn(HRGN hrgn,int nLeftRect,int nTopRect,int nRightRect,int nBottomRect);
int  SetStretchBltMode(HDC hDC,DWORD iStretchMode);
int  SetSystemPaletteUse(HDC hdc,UINT uUsage);
int  SetTextAlign(HDC hDC,DWORD fMode);
int  SetTextCharacterExtra(HDC hDC,int nCharExtra);
int  SetTextColor(HDC hDC,COLORREF crColor);
int  SetTextJustification(HDC hDC,int nBreakExtra,int nBreakCount);
int  SetViewportExtEx(HDC hDc,int nXExtent,int nYExtent,LPSIZE lpSize);
int  SetViewportOrgEx(HDC hDC,int X,int Y,LPPOINT lpPoint);
int  SetWinMetaFileBits(UINT nBufferSize,const BYTE* lpbBuffer,HDC hdcRef,const METAFILEPICT* lpmfp);
int  SetWindowExtEx(HDC hDC,int nXExtent,int nYExtent,LPSIZE lpSize);
int  SetWindowOrgEx(HDC hDC,int X,int Y,LPPOINT lpPoint);
int  SetWorldTransform(HDC hDC,const XFORM* lpXform);
int  StartDoc(HDC hdc,const DOCINFO* lpdi);
int  StartDocA(HDC hDC,const DOCINFO* lpdi);
int  StartDocW(HDC hDC,const DOCINFO* lpdi);
int  StartPage(HDC hDC);
int  StretchBlt(HDC hdcDest,int nXOriginDest,int nYOriginDest,int nWidthDest,int nHeightDest,HDC hdcSrc,int nXOriginSrc,int nYOriginSrc,int nWidthSrc,int nHeightSrc,DWORD dwRop);
int  StretchDIBits(HDC hDC,int XDest,int YDest,int nDestWidth,int nDestHeight,int XSrc,int YSrc,int nSrcWidth,int nSrcHeight,const VOID* lpBits,const BITMAPINFO* lpBitsInf,DWORD iUsage,DWORD dwRop);
int  StrokeAndFillPath(HDC hDC);
int  StrokePath(HDC hDC);
int  SwapBuffers(HDC hdc);
int  TextOut(HDC hdc,int nXStart,int nYStart,LPCTSTR lpString,int cbString);
int  TextOutA(HDC hDC,int nXStart,int nYStart,LPCTSTR lpString,int cbString);
int  TextOutW(HDC hDC,int nXStart,int nYStart,LPCTSTR lpString,int cbString);
int  TranslateCharsetInfo(DWORD* lpSrc,LPCHARSETINFO lpCharsetInfo,DWORD dwFlags);
int  UnrealizeObject(HGDIOBJ hgdiobj);
int  UpdateColors(HDC hdc);
int  WidenPath(HDC hDC);
HPEN  CreatePen(int fnPenStyle,int nWidth,COLORREF crColor);